 The following is a conversation with Terence Tao, widely considered to be one of the greatest mathematicians in history, often referred to as the Mozart of Math. He won the Fields Medal and the Breakthrough Prize in Mathematics and has contributed groundbreaking work to a truly astonishing range of fields in mathematics and physics. This was a huge honor for me, for many reasons, including the humility and kindness that Terry showed to me throughout all our interactions. It means the world. This is the Lex Freeman Podcast. To support it, please check out our sponsors in the description or at LexFreeman.com, search sponsors. And now, dear friends, here's Terence Tao. What was the first really difficult research level math problem that you encountered? One that gives you powers, maybe. Well, I mean, in your undergraduate education, you learn about the really hard and possible problems like the Riemann hypothesis, the Trin Primes conjecture. You can make problems arbitrarily difficult. That's not really a problem. In fact, there's even problems that we know to be unsolvable. What's really interesting are the problems just to the boundary between what we can do better for easily and what are hopeless. But what are problems where like existing techniques can do like 90% of the job and then you just need that remaining 10%. I think as a PhD student, the KKAER problem certainly caught my eye and it's just got solved, actually. It's a part that I've worked on a lot in my early research. Historically, it came from a little puzzle by the Japanese mathematician, Sujika KKER, like 1918 or so. So the puzzle is that you have a needle on the plane or think like driving on a road. And you know, you're like, you're on a road. And you want to execute a U-turn. You want to turn the needle around. But you want to do it as little space as possible. So you want to use this little area in order to turn it around. So, but the need is infinitely maneuverable. So you can imagine just spinning it around. It's as a unit needle. You can spin it around its center. And I think that gives you a risk of area I think pi over 4. Or you can do a 3.U-turn, which is why we teach people in the driving schools to do. And that actually takes area of pi over 8. So it's a little bit more efficient than a rotation. And so for a while, people thought that was the most efficient way to turn things around. But as a COVID showed that in fact, you could actually turn the needle around using as little areas you wanted. So 0.0 as your one, there was some really fancy multi back and forth U-turn thing that you could do. That you could turn the needle around. And so doing it, it would pass through every intermediate direction. Is this in the due to the dimensional plane? This is the due to the dimensional plane. So we understand everything in two dimensions. So the next question is what happens in three dimensions. So suppose like the Hubble Space Telescope is tube in space. And you want to observe every single star in the universe. So you want to rotate the telescope to every single direction. And he's unrealistic part. Suppose that space is at a premium, which totally is not. You want to occupy as little volume as possible in order to rotate your needle around in order to see every single star in the sky. How small a volume do you need to do that? And so you can modify a basic curvature's construction. And so if your telescope has zero thickness, then you can use as little volume as you need. It's a simple modification of the two dimensional construction. But the question is that if your telescope is not zero thickness, but just very, very thin. Some thickness delta. What is the minimum volume needed to be able to see every single direction as a function of delta? So as delta gets smaller, as you need to get thinner, the volume should go down. But how fast does it go down? And the conjecture goes down very, very slowly, like log with the click, roughly speaking. And that was proved after a lot of work. So this seems like a puzzle-wise, interesting. So it turns out to be surprisingly connected to a lot of problems in push differential equations, in number theory, in geometry, commentarics. For example, in wave propagation, you stush some water around, you create water waves, and they travel in various directions. But waves exhibit both particle and wave type behavior. So you can have what's got a wave packet, which is like a very localized wave that is low-class in space and moving a certain direction in time. And so if you plot it in those space and time, it occupies a region, which looks like a tube. And so what can happen is that you can have a wave, which initially is very dispersed, but it all focuses at a single point later in time. Like you can imagine dropping a pebble into a pond and the ripple spread out. But then if you time reverse that scenario, and the equations are way more than a time reversible, you can imagine ripples that are converging to a single point, and then a big shaggers, maybe even a singularity. And so it's possible to do that. And geometric was going on is that there's always light rays. So like if this wave represents light, for example, you can imagine this wave as a superposition of photons, all traveling at the speed of light, they all travel on these light rays, and they're all focusing at this one point. So you can very dispersed wave focus into a very concentrated wave at one point in space and time. But then it defocuses again, and it separates. But potentially if the pinjacks you had a negative solution, so what I mean is that there's a very efficient way to pack. Tubes pointing is different directions to a very, very narrow region of of a very narrow volume. Then you would also be able to create waves that start out. There'll be some arrangement of waves that start out very, very dispersed. But they would concentrate not just at a single point, but there'll be a large, there'll be a lot of concentration in space and time. And you could create what's called a blow up where these waves, they have to become so great that the laws of physics that they're governed by are no longer wave equations, but something more complicated and nonlinear. And so in mathematical physics, we care a lot about whether certain equations in wave equations are stable or not, whether they can create these singularities. There's a famous, I saw a problem called the Navier Stokes regularity problem. So the Navier Stokes equations, equations that govern a fluid flow or incompressible fluid is like water. The question asks, if you start with a smooth velocity fluid of water, can it ever concentrate so much that like the velocity becomes infinite at some point, that's called a singularity. We don't see that in real life, if you splash around water and the bathtub, we won't explode on you. Or have water leaving a speed of light, but potentially it is possible. And in recent years, the consensus has drifted towards the belief that in fact for certain very special initial configurations of say water that singularities can form, but people have not yet been able to actually establish this. The clay foundation has these seven millennium prize problems as a million dollar prize for solving one of these problems. So this is one of them of the seven only one of them has been solved at the point great conjecture, like parliament. So the conjecture is not directly directly related to the Navier Stokes problem, but understanding it would help us understand some aspects of things like wave concentration, which would indirectly probably help us understand the Navier Stokes problem better. So we speak to the Navier Stokes, so the existence and smoothness, like you said millennial prize problem, right, you made a lot of progress on this one in 2016, you published a paper finite time blow up for an average three dimensional Navier Stokes equation. Right. So we're trying to figure out if this thing usually doesn't blow up. Right. But can we say for sure it never blows up. Right. Yeah. So yeah, that is literally the moving all the question. So this is what distinguishes mathematicians from pretty much everybody else like if if something holds an important 99% of the time, that's good enough for most, you know, for for most things. But mathematicians are one of the few people who really care about whether every like 100% really 100% of all situations are covered by by. Yeah. So most fluid, most of the time, and the water does not blow up, but could you design a very special initial state that does this? And maybe we should say that this is a set of equations that govern in the field of fluid dynamics, trying to understand how fluid behaves and it's actually turns out to be really complicated. You know, fluid is yeah, extremely complicated thing to try to model. Yeah. So it has practical importance. So this is a high price problem, concerns what's called the incompressible Navier Stokes, which governs things like water. There's something called the compressible Navier Stokes, which governs things like air. And that's particularly important for weather prediction, weather prediction. It's just a lot of computation fluid dynamics. A lot of it is actually just trying to solve the Navier Stokes equations as best they can. Also gathering a lot of data to the they can get they can initialize the equation. There's a lot of moving parts. So it's very important problem practically. Why is it difficult to prove general things about these set of equations like it not not blowing up short answers Maxwell's demon. So, so, I suppose demon is a concept in thermodynamics. Like if you have a box of two gases in oxygen and nitrogen. And maybe you start with all the oxygen on one side and that you're the other side, but there's no barrier between them. Then they will mix. And they should stay mixed. There's no reason why they should unmix. But in principle, because of all the collisions between them, there could be some sort of weird conspiracy like that. Like maybe there's a microscopic demon called Maxwell's demon that will every time of oxygen and nitrogen at them collide. They were bounced off in such a way that the oxygen sort of drifts on to one side and then naturally goes to the other. And you could have an extremely improbable configuration emerge, which we never see. And we statistically it's extremely unlikely. But mathematically it's possible that this can happen and we can't roll it out. And this is a situation that shows up a lot in mathematics. Basically, examples, the digits of pi, three, four, one, four, one, five, nine, and so forth. The digits look like they have no pattern. And we believe they have no pattern. On the long term, you should see as many ones and twos and threes as fours and thousand sixes. There should be no preference in the digits of pi to favor, let's say, seven over eight. But maybe there's some demon in the digits of pi that like every time you can beat more more digits, it's a biases one digit to another. And this is a conspiracy that should not happen. There's no reason it should happen. But there's no way to prove it with our current technology. Okay, so getting back to Navier Stokes, a fluid has a certain amount of energy. And because if it was in motion, the energy gets transported around. And what is also viscous. So if the energy is spread out over many different locations, the natural viscosity of fluid will just damp out the energy and it will go to zero. And this is what happens when we actually experiment with water. I get it. You splash around. There's some turbulence and weight and so forth. But eventually it settles down and the lower the amplitude, the smaller velocity, the more calm it gets. But potentially there is some sort of demon that keeps pushing the energy of the fluid into a smaller and smaller scale and move faster and faster and faster speeds the effective viscosity is relatively less. And so it could happen that it creates us some sort of sort of similar plot scenario where you know, the end of the fluid starts off at some large scale. And then it all sort of transfers energy into a smaller region of the fluid. Which then at a much faster rate moves into an even smaller region and so forth. And each time it does this, it takes maybe half as long as as a previous one. And then you could actually converge to all the energy, concentrating one point in a finite amount of time. And that's a that's an always go to find a hand blow up. So in practice, this doesn't happen. So water is what's called turbulent. So it is true that if you have a big idea of water, it will tend to break up into smaller eddies. But it won't transfer all this energy from one big edit into one smaller edit. It will transfer into maybe three or four. And then those ones split up into maybe three or four small eddies of their own. So the energy gets dispersed to the point where the viscosity can then keep a thing under control. But if it can somehow concentrate or the energy keep it all together and do it fast enough that the viscous effects don't have enough time to come everything down, then this will happen. So there were papers who had claimed that, oh, you just need to take into account conservation energy and just carefully use the viscosity and you can keep everything under control for not just the Navier Stokes, but for many, many types of equations like this. And so in the past, there have been many attempts to try to obtain what's called global regularity for Navier Stokes, which is the opposite of finite time blow up that have lost you say smooth. And it all failed. There was always some sign error or some subtle mistake and it couldn't be salvaged. So what I was interested in doing was trying to explain why we were not able to disprove finite time blow up. I couldn't do it for the actual equations of fluids, which were too complicated. But if I could average the equations of motion of Navier Stokes, basically, if I could turn off certain types of ways in which water interaction and only keep the ones that I want. So in particular, if there's a fluid and it could transfer energy from a large 80 into this small Eddie or this other small Eddie, I would turn off the energy channel that would transfer energy to this one and directed only into this smaller Eddie while still preserving the law of conservation energy. So you try and make a blow up. Yeah. Yeah. So I basically engineer a blow up by changing laws of physics, which is one thing that mathematicians are allowed to do. We can change the equation. How does that help you get closer to the proof of something? Right. So it provides what's called an obstruction in mathematics. So so what I did was that basically if I turned off the certain parts of the equation, which usually when you turn off certain interactions, make it less nonlinear, it makes it more regular and less likely to blow up. But I found that by turning off a very well designed set of of of of of of interactions, I could force all the energy to blow up in finite time. So what that means is that if you wanted to prove the regularity for Navier Stokes for the actual equation, you had you must use some feature of the true equation, which which my artificial equation does not satisfy. So it rules out certain certain approaches. So I think my math is it's not just about finding you know, taking a technique that is going to work in at playing it, but you need to not take the techniques that don't work. And for the problem that are really hard, often there are dozens of ways that you might think might apply to solve the problem, but it's only after a lot of experience that you realize there's no way that these methods are going to work. So having these counter examples for nearby problems kind of rules out. It saves you a lot of time because you you're not wasting energy on things that you now know cannot possibly ever work. How deeply connected is it to that specific problem of fluid dynamics or is it some more general intuition you build up about mathematics? Right. Yeah. So the key phenomenon that was my technique exploits is what's called super criticality. So in part of the question is often these equations are like a tug of war between different forces. So in Navier Stokes, there's the dissipation force coming from viscosity and it's very well understood. It's linear. It comes things down. If if viscosity was all there was, then nothing bad would ever happen. But there's also transport that energy from in one location of space can get transported because of losing motion to other locations. And that's a nonlinear effect and that causes all the problems. So there are these two competing terms in the Navier Stokes equation, the dissipation term and the transport term. If the dissipation term dominates, if it's large, then basically you get regularity. And if the transport term dominates, then we don't know what's going on. It's a very nonlinear situation. It's unpredictable. It's tubular. So sometimes these forces are on balance at small scales, but not in balance at large scales or vice versa. So Navier Stokes is what's called super critical. So at smaller and smaller scales, the transport terms are much stronger than the viscosity terms. So the viscosity terms are things that calm things down. And so this is why the problem is hard. In two dimensions, so the Soviet methodical and the traditional addition skyer, she in the 60s shows that in two dimensions there was no blow up. And in two dimensions, the Navier Stokes equations is what's called critical. The effect of transport and the effect of viscosity are by the same strength, even at very, very small scales. And we have a lot of technology to handle critical and also subcritical equations and proof regularity. But for super critical equations, it was not clear what was going on. And I did a lot of work and then there's been a lot of follow up showing that for many other types of super critical equations, you can create all kinds of blow up examples. Once the nonlinear effects dominate the linear effects at small scales, you can have all kinds of bad things happen. So this is sort of one of the main insights of this line of work is that super criticality versus criticality and subcriticality. This makes a big difference. I mean, that's a key qualitative feature that distinguishes some equations from being sort of nice and predictable and like like planetary motion. I mean, there's certain equations that you can predict for millions of years or thousands at least. Again, it's not really a problem, but there's a reason why we can't predict the weather past two weeks into the future because it's a super critical equation. Lots of really strange things are going on at very fine scales. So whenever there is some huge source of nonlinearity that can create a huge problem for predicting what's going to happen. Yeah. And if nonlinearity is somehow more and more featured and interesting at small scales. I mean, there's many equations that are nonlinear, but in many equations, you can approximate things by the bulk. So for example, planetary motion, if you wanted to understand the orbit of the moon or Mars or something, you don't really need the microstructure of the seismology of the moon or exactly how the mass is distributed. You can almost approximate these planets by point masses. And just the aggregate behavior is important. But if you want to model a fluid like the weather, you can't just say in Los Angeles, the temperature is this, the wind speed is this for super critical equations, the fine confirmation is really important. If we can just linger on the Navier Stokes equations a little bit. So you've suggested maybe you can describe it that one of the ways to solve it or to negatively resolve it would be to sort of to construct a liquid, a kind of liquid computer. And then show that the halting problem from competition theory has consequences for fluid dynamics. Show it in that way. Can you describe this? Yeah. So this came out of this work of constructing this average equation that blew up. So as part of how I had to do this, so this is naive way to do it. You just keep pushing every time you get energy at one scale, you push it immediately to the next scale as fast as possible. This is sort of the naive way to force blow up. In terms of in five, but high dimensions, this works. But in three dimensions, there was this funny phenomenon that I discovered that if you keep, if you change loads of physics, you just always keep trying to push the energy into smaller, smaller scales. What happens is that the energy starts getting spread out into many scales at once. So you have energy at one scale, you're pushing it into the next scale, and then as soon as it enters that scale, you also push it to the next scale, but there's still some energy left over from the previous scale. You're trying to do everything at once. And this spreads out the energy too much. And then it turns out that that it makes it vulnerable for viscosity to come in and actually just damp out everything. So so it turns out this this directive, or she doesn't actually work. There was a separate paper by some other authors that I actually showed this in three dimensions. So what I needed was to program at the lathe, so kind of like air locks. So I needed an equation which would start with a fluid doing something at one scale. It would push this energy into the next scale, but it would stay there until all the energy from the larger scale got transferred. And only after you pushed all the energy in, then you sort of open the next gate, and then you push that in as well. So by doing that, it kind of the energy enters forward scale by scale in such a way that it's always localized at one scale at a time. And then it can resist the effects of viscosity because this is not dispersed. So in order to make that happen, yeah, I had to construct a rather complicated non-linearity. And it was basically like, you know, like it was contracting like an electronic circuit. So I actually thank my wife for this because she was trained as an electro engineer. And you know, she talked about, you know, she had to design circuits and so forth. And you know, if you want a circuit that does a certain thing, like maybe have a light that flashes on and then turns off and then on and off, you can build it from more primitive components, you know, capacitors and resistors and so forth. And you have to board a diagram and these diagrams, you can sort of follow up your eyeballs and say, oh yeah, the current will be brought up here and then it will stop and then it will do that. So I knew how to build the analog of basic electronic components. You're like resistors and capacitors and so forth. And I would stack them together and start in such a way that I would create something that would open one gate and then there will be a clock. And then once the clock hits us and thresholds it would close it. Kind of a group go bird type machine but described mathematically and this ended up working. So what I realized is that if you could pull the same thing off for the actual equations. So if the equations of water supported computation. So like if you can imagine kind of a steam punk was really water punk type of thing where, you know, so modern computers are electronic. You know, they're powered by electrons passing through very tiny wires and interacting with other electrons and so forth. But instead of electrons, you can imagine these pulses of water moving in a certain velocity. And maybe it's there are two different configurations corresponding to a bit being up or down. Probably if you had two of these moving bodies of water collide, they would come out with some new configuration, which is which would be something like an and gate or or gate. You know, the output would depend on a very predictable way on the inputs. And like you could chain these together and maybe create a two in machine and then you have computers, which are made completely out of water. And if you have computers, then maybe you could do robotics. So I had hydraulics and so forth. And so you could create some machine, which is basically a fluid analog was called a volumin machine. So the moment proposed, if you want to colonize Mars, the sheer cost of transporting people machines to Mars is just ridiculous. But if you could transport one machine to Mars and this machine had the ability to mind the planet, create some more materials, smell them and build more copies of the same machine. Then you could colonize the whole planet over time. So if you could build a fluid machine, which is a fluid robot, and what they would do, it's purpose in life, it's programmed so that it would create a smaller version of itself in some sort of cold state. It wouldn't start just yet. Once it's ready, the big robot, convivial water would transport all his energy into the smaller configuration and then power down. And then the same thing, like clean itself up. And then what's left is this newest set, which would then turn on and do the same thing, but smaller and faster. And then the equation has a certain scaling symmetry. Once you do that, it can just keep iterating. So this in principle would create a blow up for the actual Navier Stokes. And this is what I managed to accomplish for this average Navier Stokes. So it provided the sort of roadmap to solve the problem. Now this is a pipe dream because there are so many things that are missing for this to actually be a reality. So I can't create these basic logic gates. I don't have these special conductors of water. I mean, there's candidates that include vortex rings that might possibly work. But also, you know, analog computing is really nasty. I can put additional computing. I mean, because there's always errors. You have to do a lot of error correction along the way. I don't know how to completely power down the big machine so that it doesn't interfere with the writing of the smaller machine. But everything in principle can happen. Like it doesn't contradict any of the laws of physics. So it's sort of evidence that this thing is possible. There are other groups who are now pursuing ways to make Navier Stokes blow up, which are no in-ear as ridiculously complicated as this. They actually are pursuing much closer to the direct self-similar model, which can... It doesn't quite work as is, but there could be some simpler scheme than what I just described. To make this work. There is a real leap of genius here to go from Navier Stokes to this Turing machine. So it goes from what the self-similar blob scenario that you're trying to get the smaller, smaller blob to now having a liquid Turing machine to get smaller, smaller, smaller, and somehow seeing how that could be used to say something about a blow-up. I mean, that's a big leap. So there's precedent. The thing about mathematics is that it's really good at spotting connections between what you think of as completely different problems. But if the mathematical form is the same, you can draw a connection. So there's a lot of previously or more like cellular automata. The most famous of which is Conway's Game of Life. This is infinite to speed grid. And at any given time, the grid is occupied by a cell or is empty. And there's a very simple rule that tells you how these cells evolve. So sometimes cells live and sometimes they die. And there's a student, you know, when I was a very popular screen saver, to actually just have these animations going on. And they look very chaotic. In fact, they look a little bit like turbulent flow, sometimes. But at some point, people discovered more and more interesting structures within this Game of Life. So for example, they discover the single to glider. So glider is a very tiny configuration of like four or five cells, which evolves and it just moves at a certain direction. And that's like this vortex rings. So this is an analogy. The Game of Life is kind of a discrete equation. And the fluid Navi-Sogs is a continuous equation. But mathematically, they have some similar features. And so over time, people discovered more and more interesting things that you could build within the Game of Life. The Game of Life is a very simple system. It only has like three or four rules to do it. But you can design all kinds of interesting configurations inside it. There's some called a glider gun that does nothing to spit out gliders one at a time. And then after a lot of effort, people managed to create and gates and all gates for gliders. Like there's this massive ridiculous structure, which if you have a stream of gliders coming in here then you may produce a stream of gliders coming out. If maybe if both of the streams have gliders, then there will be an output stream. But if only one of them does, then nothing comes out. So they could build something like that. And once you could build and these basic gates, then just from software engineering, you can build almost anything. You can build a touring machine. I mean, it's like an enormous steam pump type thing. They look ridiculous. But then people also generated self replicating objects in the Game of Life, a massive machine, a phenomenal machine, which over a huge period of time, and they were always glider guns inside doing these steam pump calculations. They would create another version of itself, which could replicate. It's so incredible. A lot of this was like community crowdsourced by like how much of mathematicians actually. So I knew about that work. And so that is part of what inspired me to propose the same thing whenever you're stuck. Now if you're just a much, I say analog is much worse in digital. It's going to be, you can't just directly take the constructions in the Game of Life, pump them in. But again, it shows as possible. You know, there's a kind of emergence that happens with these cellular automata, local rules, maybe similar to fluids. You know, but local rules operating at scale can create these incredibly complex dynamic structures. Do you think any of that is amenable to mathematical analysis? Do we have the tools to say something profound about that? The thing is, you can get this emerging very complicated structures, but only with very carefully prepared initial conditions. So these glider guns and gates and sort of machines, if you just plant randomly, some cells, and you're looking at that, you will not see any of these. And that's the analogous situation of Navier Stokes again, you know, that with typical initial conditions, you will not have any of this weird computation going on. But basically through engineering, you know, by specially designing things in a very special way, you can pick clever constructions. And one of the best possible to prove the sort of the negative of like, basically prove that only through engineering can you ever create something interesting. This is a recurring challenge in mathematics that I call the dichotomy between structure and randomness. That most objects that you can generate in mathematics are random. They look like random, like the digits of pi. Well, we believe there's a good example. But there's a very small number of things that have patterns. But now you can prove something as a pattern by just constructing. Like if something has a simple pattern and you have a proof that it does something like repeat itself every so often, you can do that. And you can prove that, for example, you can prove that most sequences of digits have no pattern. So like if you just pick digits randomly, there's some called low large numbers that tells you you're going to get as many ones as two's in the long run. But we have a lot fewer tools to give you a specific pattern like the digits of pi. How can I show that this doesn't have some weird pattern to it? Some other work that I have spent a lot of time on is to prove or construct your theorems or inverse theorems that give tests for when something is very structured. So some functions are what's going to add to it. Like if you have a function that has a natural numbers, the natural numbers. So maybe two maps to four, three maps to six and so forth. Some functions are what's called additive, which means that if you add two inputs together, the output gets added as well. For example, a multiply by constant. If you multiply a number by 10, if you multiply a plus b by 10, that's the same as a by 10 and b by 10 and then add them together. So some functions are additive. Some of them are kind of additive, but not completely additive. So, for example, if I take a number n, I multiply by the square root of two and I take the integer part of that. So 10 by square root of two is like 14 points, something. So 10, I have to 14. 20, I have to 28. So in that case, additive, these two then, so 10 plus 10 is 20 and 14 plus 20 is 28. But because of this rounding, sometimes there's round of errors and sometimes when you add a plus b, this function doesn't quite give you the sum of the two individual outputs, but the sum plus minus one. So it's almost additive, but not quite additive. So there's a lot of useful results in mathematics and I've worked a lot on 12 things like this to the effect that if I've functioned to exhibit some structure like this, then it's basically, there's a reason for why it's true and the reason is because there's some other nearby function, which is actually completely structured, which is explaining this sort of partial pattern that you have. And so if you have these little inverse theorems, it creates this of dichotomy that either the objects that you study are either have no structure at all, or they are somehow related to someone else structured. And in either way, in either case, you can make progress. A good example of this is that this is old theorem and mathematics called samaritis theorem, proven in the 1970s. It concerns trying to find a certain type of pattern in a set of numbers, the patterns of a math, progression, things like 35 and 7 or 10, 15 and 20. And some really, Andre, some really proved that any set of numbers that are sufficiently big, also, also positive density has a math, progression in it off of any length you wish. So, for example, the odd numbers have a set of density one half, and they contain ethnic progression of any length. So in that case, it's obvious because the odd numbers are really, really structured. I can just take 11, 13, 15, 17, I can easily find ethnic progressions in that set. But the memories of them also applies to random sets. If I take the set of odd numbers and I flip a coin for each number, and I only keep the numbers for which I got a heads. So I just flip coins. I just randomly take out half the numbers, I keep one half. So that's the set that has no patterns at all. But just from random fluctuations, you will still get a lot of ethnic progressions in that set. Can you prove that there's arithmetic progressions of arbitrary length within a random... Yes. I mean, that of the infinite monkey theorem. Usually, mathematicians give boring names to theorists, but occasionally they give colourful names. Yes. The popular version of the infinite monkey theorem is that if you have an infinite number of monkeys in a room with each of a typewriter, they type out text randomly. Almost surely one of them is going to generate the entire school of hamlet or any other finite string of text. It will just take some time, quite a lot of time actually, but if you have an infinite number, then it happens. So basically, the theme says that if you take an infinite string of digits or whatever, eventually any finite pattern you wish will emerge. It may take a long time, but it will eventually happen. In particular, ethnic progressions of any length, what eventually happen? A kibadini, an extremely long random sequence for this to happen. I suppose that's intuitive. It's just infinity. Yeah, infinity absorbs a lot of sense. Yeah. How are we humans supposed to deal with infinity? Well, you can think of infinity as an abstraction of a finite number of which you do not have a bound for. So nothing in real life is truly infinite, but you can ask these old questions, and I'm saying, what if I had as much money as I wanted? What if I could go as fast as I wanted? And a way in which mathematicians formalize that is, mathematics has found a formalism to idealize, instead of something being extremely large or extremely small to actually be exactly infinite or zero. And often the mathematics becomes a lot cleaner when you do that. In physics, we joke about assuming spherical cows. We all have problems with all kinds of real world effects, but you can idealize sense of things to infinity, sense of something to zero. And the mathematics becomes a lot simpler to work with it. I wonder how often using infinity forces us to deviate from the physics of reality. Yeah. So there's a lot of pitfalls. So we spend a lot of time under graduate math classes teaching analysis, and analysis is often about how to take limits and whether, you know, so for example, 8 plus B is always B plus A. So when you have a finite number of terms, you add them, you can swap them, and there's no problem. But when you have an infinite number of terms, they sort of show games you can play, where you can have a series which converges to one value, but you rearrange it, and suddenly converges to another value. And so you can make mistakes. You have to know what you're doing when you allow infinity. You have to introduce these epsilons and deltas, and there's a certain type of wave of reasoning that helps you avoid mistakes. In more recent years, people have started taking results that are true in infinite limits, and what's what's finalizing them. So you know something true eventually, but you don't know when, now give me a rate. Okay, so such a, if I don't have an infinite number of monkeys, but a large finite number of monkeys, how long do I have to wait for Hamlet to come out? And that's a more quantitative question. And this is something that you can attack by purely finite methods, and you can use your finite intuition. And in this case, it turns out to be exponential in the length of the text that you're trying to generate. And so this is why you never see the monkeys create Hamlet. You can maybe see them create a fuller of wood, but nothing that big. And so I personally find, once you find it high, say infinite statement, it's just a much more intuitive and it's no longer so weird. So even if you're working with infinity, it's good to find it high so that you can have some intuition. Yeah, the downside is that the finite high proves I just much, much messier. And so the infinite ones are found first, usually, like decades earlier, and then later on, people find it high. So since we mentioned a lot of math and a lot of physics, what do you use the difference between mathematics and physics as disciplines, as ways of understanding of seeing the world? Maybe you can throw an engineering in there. You mentioned your wife is an engineer, give it new perspective on circuits. So there's a different way of looking at the world, given that you've done mathematical physics, so you've worn all the hats. Right. So I think science in general is interaction between three things. There's the real world. There's what we observe on the real world, observations. And then our mental models as to how we think the world works. So we can't directly access reality. Okay. All we have are the observations, which are incomplete, and they have errors. And there are many, many cases where we would want to know, for example, what is the weather like tomorrow? Have the observation that we'd like to predict. And then we have these simplified models, sometimes making unrealistic assumptions. It's spherical cow type things. Those are the mathematical models. Mathematics is concerned with the models. Science collects the observations, and it proposes the models that might explain these observations. What mathematics does it, we stay within the model and ask what are the consequences of that model? What observations, what predictions would the model make of the future observations? Or past observations to test it fit observed data. So there's definitely symbiosis. It's, I guess mathematics is unusual among other disciplines. It's that we start from hypotheses like the axioms of a model and ask what conclusions come up from that model. In almost any other discipline, you start with conclusions. I want to do this. I want to board a bridge. I want to make money. I want to do this. Okay. Then you find the path to get there. A lot, there's a lot less sort of speculation about it. Suppose I did this. What would happen? You know, planning and modeling. Specular defection maybe is one other place. But that's what I did actually. Most of the things we do in life is conclusions driven, including physics and science. I mean, they want to know, you know, where is this asteroid going to go? What is the weather going to be tomorrow? But mathematics also has this other direction of going from the axioms. What do you think there is this tension in physics between theory and experiment? What do you think is the more powerful way of discovering truly novel ideas about reality? Well, you need both. Top down on bottom up. Yeah, it's a really an interaction with you in all these things. So over time, the observations and the theory and the modeling should go both get closer to reality. But initially, and it is in it. I mean, this is the always the case out there. They're always far apart to begin with. But you need one to figure out where to push the other. So if your model is predicting anomalies that are not picked up by experiment, that towards experiment is where to look to find more data to refine the models. So it goes back and forth. Within mathematics itself, there's also a theory and experimental component. It's just that until very recently, theory has dominated almost completely. 99% of mathematics is theoretical mathematics. And there's a very tiny amount of experimental mathematics. I mean, people do do it. If they want to study prime numbers or whatever, they can generate large data sets. So once we had a computer, we'd be able to do it a little bit. Although, even before, like Gals, for example, he discovered the most basic theorem in number theory. It's called the prime number theorem, which predicts how many primes that are up to a million, up to a trillion. It's not obvious question. And basically what he did was that he computed, I mean, mostly by himself, but also hired human computers, people whose professional job it was to do arithmetic. To compute the first 100,000 primes or something and made tables and made a prediction. That was an early example of experimental mathematics. But until very recently, it was not, I mean, theoretical mathematics was just much more successful. Because doing complicated mathematical computations was just not feasible until very recently. And even nowadays, even though we have powerful computers, only some mathematical things can be explored numerically. There's some called the Commodore explosion. If you want to study, for example, Xiamen Riesthiom, you want to study all possible subsets of numbers 1 to 1000. There's only 1000 numbers, how bad could it be? It turns out that the number of different subsets of 1 to 1000 is 2 to the power of 1000, which is way bigger than any computer can currently continue in any computer ever, or wherever you can operate. So you have to be there are certain math problems that very quickly become just intractable to attack by direct brute force computation. Chess is another famous example. The number of chess positions we can't get a computer to fully explore. But now we have AI. We have tools to explore this space, not with 100% guarantees of success, but with experiment. So we can empirically solve chess now. For example, we have very, very good AI's that they don't explore every single position in the game tree, but they have found some very good approximation. And people are using actually these chess engines to make, to do experimental chess. They're revisiting old chess theories about, oh, you know, when you, this type of opening, this is a good type of move this is not. And they use these chess engines to actually refine in some case overturn. Commission wisdom about chess. And I do hope that mathematics will have a larger experimental board in the future perhaps powered by AI. Well, of course, talk about that. In the case of chess, and there's a similar thing in mathematics, I don't believe it's providing a kind of formal explanation of the different positions. It's just saying which position is better or not that you can intuit as a human being. And from that, we humans can construct a theory of the matter. You've mentioned the Plato's cave algorithm. So it gives people to know it's where people are observing shadows of reality, not reality itself. And they believe what they're observing to be reality. Is that in some sense what mathematicians and maybe all humans are doing is looking at shadows of reality? Is it possible for us to truly access reality? Well, there's three ontological things. There's actual reality, there's observations and our models. And technically they are distinct and I think they will always be distinct. But they can get closer over time. So, and the process of getting closer often means that you have to discard your initial intuitions. So astronomy provides great examples. An initial model of the world is flat because it looks flat. And it's big. And the rest of the universe, the sky is not like the sun, for example, looks really tiny. And so you start off with a model which is really far from reality. But it fits kind of the observations that you have. So things look good. But over time as you make more and more observations, bring it closer to reality, the model gets dragged along with it. And so over time we had to realize that the Earth was round, that it spins, it goes around the solar system, solar system goes on the galaxy, and so on and so forth. And the guys part of the universe, he was expanding. The expansion is self-expanding, accelerating. And in fact, very recently in this year or so, even the evolution of the universe itself is so, this evidence that is non-constant. And the explanation behind why that is, it's catching up. I mean, it's still the dark matter, dark energy. Yes. This kind of thing. We have a model that sort of explains that fits the data really well. It just has a few parameters that you have to specify. But so people say all that, spudged factors, with enough fight factors, you can explain anything. But the mathematical point of the model is that you want to have fewer parameters in your model than data points in your observational set. So if you have a model with 10 parameters that explains 10-up to observations, that is completely useless model. It's what's called overfitted. But if you have a model with two parameters, and it explains a trillion observations, which is basically, so the dark matter model, I think, has 14 parameters, and it explains petabytes of data that the astronomer's have. You can think of a theory. One way to think about physical mathematical theory is that it's a compression of the universe. And a data compression. So you have these petabytes of observations. You'd like to compress it to a model which you can describe in five pages and specify a certain number of parameters, and it can fit to reasonable accuracy, almost all of the observations. I mean, the more compression that you make, the better your theory. In fact, one of the great surprises of our universe and of everything in it is that it's compressible at all. It's the unreasonable effectiveness of mathematics. I'm not a quote like that. The most incomprehensible thing about the universe is that it is compressible. And that just compressible. You can do an equation like E equals of C squared. There is actually some mathematical possible explanation for that. So there's this phenomenon in mathematical universality. So many complex systems at the macro scale are coming out of lots of tiny interactions at the macro scale. And normally, because of the common form of explosion, I think that the macro scale equations must be infinitely exponentially more complicated than the macro scale ones. And they are, if you want to solve them completely exactly. Like if you want to model all the atoms in a box of air, I have a guardra's number with humongous. There's a huge number of particles. If you actually track each one, it will be ridiculous. But certain laws emerge at the macro scale that almost don't depend on what's going on at the macro scale. Or only depend on a very small number of parameters. So if you want to model a gas of, you know, quintillion particles in a box, you just need to know temperature and pressure and volume in a few parameters, like 506. And it models almost everything you need to know about these 10th or 23 or whatever particles. So we have, we don't understand universality anywhere new as we would like mathematically. But there are much simpler 20 models where we do have a good understanding of why universality occurs. Most basic one is the central element theorem. That explains why the bell curve shows up everywhere in nature. So many things are distributed by, I was going to gas the distribution, famous bell curve. There's now even a meme with this curve. And even the meme applies broadly. The universality to the meme. Yes, you can go matter if you feel like. But there are many, many processes. For example, you can take lots of independent random variables and average them together in various ways. You can take a simple average or more complicated average. And we can prove in various cases that these bell curves, these Gaussian's emerge. And it is a satisfying explanation. Sometimes they don't. So if you have many different inputs and they're all correlated in some systemic way, then you can get something very far from a bell curve. And this is also important to know when a situation is really wrong. So universality is not a 100% reliable thing to rely on. That global financial crisis was a famous example of this. People thought that mortgage defaults had this sort of Gaussian type behavior. If you ask if a population of 100,000 Americans were mortgages, you ask what proportion of them were defaulting the mortgages. If something was decarolated, it would be an ass-bulk curve. And you can manage risk of options and derivatives and so forth. And it is a very beautiful theory. But if there are systemic shocks in the economy that can push everybody defaults at the same time, that's very non-Gaussian behavior. And this wasn't fully accounted for in 2008. Now I think there's some more awareness that this is a systemic risk because I keep a much bigger issue. Just because the model is pretty and nice, it may not match reality. So the mathematics of working out what models do is really important. But also the science of validating when the models fit reality and when they don't. You need both. But mathematics can help because it can, for example, the central limit is that if you have certain axioms like non-correlation, that if all the inputs are correlated to each other, then you have these gas behaviors that things are fine, it tells you where to look for weaknesses in the model. So if you have a mathematical understanding of central limit theorem and someone proposes to use these Gaussian couplers or whatever to model default risk, if you're mathematically trained, you would say, okay, but what are the systemic correlations between all your inputs? Then you can ask the economists, how much risk is that? And then you can go look for that. So there's always this synergy between science and mathematics. A little bit on the topic of universality. You're known and celebrated for working across an incredible breadth of mathematics reminiscent of Hilbert a century ago. In fact, the great fields metal winning mathematician Tim Gowers has said that you are the closest thing we get to Hilbert. He's a colleague of yours. But anyway, so you are known for this ability to go both deep and broad in mathematics. So you're the perfect person to ask. Do you think there are threads that connect all the disparate areas of mathematics? Is there a kind of deep underlying structure to all of mathematics? There's certainly a lot of connecting threads and a lot of the progress of mathematics can be represented by taking by stories of two few mathematics that were previously not connected and finding connections. An ancient example is geometry and number theory. So in the times of ancient Greeks, these were considered different subjects. I mean, mathematicians worked on both. You could work both on geometry, most famously, but also on numbers. But they were not really considered related. I mean, a little bit like, you could say that this length was five times this length because you could take five copies of this length and so forth. But it wasn't until they carved, you really realized that you could develop, you could not go and geometry. You can parameterize the plane a geometric object by two real numbers. Every point can be, and so geometric problems can be turned into problems about numbers. And today, this feels almost trivial. There's no content to list. Of course, the plane is xx and y. Because that's what we teach. And it's internalized. But it was an important development that these two fields are unified. And this process has just gone on throughout mathematics over and over again. The algebra and geometry were separated. And now we have a three-hour-to-hour geometry that connects them and over and over again. And that's certainly the type of mathematics that I enjoy the most. So I think there's sort of different styles to being a mathematician. I think Hedgehogs and Fox. A Fox knows many things a little bit, but a Hedgehog knows one thing very, very well. And in mathematics, there's definitely both Hedgehogs and Foxes. And then there's people who can play both roles. And I think, I do a collaboration between mathematicians, it involves a very, you need some diversity. For Foxes working with many Hedgehogs all by spurser. So yeah, but I identify mostly as a Fox, certainly. I like arbitrage somehow. Learning how one field works, learning the tricks of that wheel and going to another field, which people don't think it is related, but I can adapt the tricks. So see the connections between the fields. So there are other mathematicians who are far deeper than I am. They really Hedgehogs, they know everything about one field and they're much faster and more effective in that field, but I can give them these extra tools. I mean, you said that you can be both a Hedgehog and the Fox, depending on the context, depending on the collaboration. So what, can you, if it's at all possible, speak to the difference between those two ways of thinking about a problem? Say you're encountering a new problem, you know, searching for the connections versus like very singular focus. I'm much more comfortable with the Fox paradigm. Yeah, so yeah, I like looking for analogies, narratives. I spend a lot of time, if there's a result I see it in one field, and I like the result, it's a cause out, but I don't like the proof. It uses types of mathematics that I'm not super familiar with. I often try to re-prove it myself using the tools that I favor. Of my proof is worse, but by the exercise you're doing so, I can say, oh, now I can see what the other proof was trying to do. And from that, I can get some understanding of the tools that are used in that field. So it's very exploratory, very doing crazy things and crazy builds and reinventing the wheel a lot. Whereas the Hedgehog style is, I think what's more scholarly, you know, you very knowledge-based, you stay up to speed on all the developments in this field, you know, all the history, you have a very good understanding of exactly the strength and weaknesses of each particular technique. Yeah, I think you'd rely a lot more on calculation than sort of trying to find narratives. So yeah, I mean, I could do that too, but the other proof works extremely good at that. Let's step back and maybe look at a bit of a romanticized version of mathematics. So I think you've said that early on in your life, math was more like a puzzle-solving activity when you were young. When did you first encounter a problem or proof where you realize math can have a kind of elegance and beauty to it? That's a good question. When I came to graduate school in Princeton, so John Conway was there at the time, he passed away a few years ago. But I remember one of the very first research talks I went to was a talk by Conway on what he called Extreme Proof. So Conway had just said this is an amazing way of thinking about what kinds of things in a way that you would normally think of. So he thought of proofs themselves as occupying some sort of space. So if you want to prove something, let's say that there's infinitely many primes, okay? You're all different proofs, but you could rank them in different axes. Like some proofs are elegance, some proofs are long, some proofs are elementary and so forth. And so this is cloud, so the space of all proofs itself has some sort of shape. And so he was interested in extreme points of this shape. Like all these proofs, what is one of these shortest at the expense of everything else? Or the most elementary or whatever. And so he gave some examples of well-known theorems. And then he would give what he thought was the extreme proof in these different aspects. I just found out really eye opening that, you know, it's not just getting a proof for us all was interesting, but. But once you have that proof, you know, trying to optimize it in various ways. That proof, proofing itself had some craftsmanship to it. It's something for my writing style that, you know, like when you do your math assignments and as you undergraduate your homework and so forth, you're sort of encouraged to just write down any proof that works, okay? And the hand is in there, as long as it gets a tick mark, you move on. But if you want your results to actually be influential and be read by people, it can't just be correct. You should also be a pleasure to read, you know, motivated, be adaptable to generalize to other things. It's the same in many other disciplines, like coding. There's a lot of analogies between math and coding. I like analogies, if you haven't noticed. But, you know, like you can code something spaghetti code that works for a certain task. And it's quick and dirty, and it works. But there's lots of good principles for writing code well so that other people can use it, but it's all that has fewer bugs and whatever. And there's some of the things with mathematics. So, yeah, first of all, there's so many beautiful things there. And Kama is one of the great minds in mathematics ever and computer science. Just even considering the space of proofs. Yeah. And saying, okay, what does this space look like? And what are the extremes? Like you mentioned coding is an analogies, interesting. Because there's also this activity called the code golf. Oh, yeah, yeah, yeah. Which I also find beautiful and fun, where people use different programming languages to try to write the shortest possible program that accomplishes a particular tasks. Yeah. Then I believe there's even competitions on this. Yeah, yeah, yeah. And it's also a nice way to stress test, not just the sort of for the programs or in this case, the proofs, but also the different languages. Maybe that's a different notation or whatever to use to tell a comprehensive, different task. Yeah, you learn a lot. I mean, it may seem like a frivolous exercise, but it can generate all these insights, which if you didn't have this artificial objective to pursue, you might not see. What to use the most beautiful or elegant equation in mathematics? I mean, one of the things that people often look to in beauty is this simplicity. So if you look at E equals obviously squared. So when a few concepts come together, that's why the Euler identity is often considered the most beautiful equation mathematics. Do you find beauty in that one in the Euler identity? Yeah, well, as I said, I mean, what I find most appealing is connections between different things that you like. So if you eat the pi i equals minus one. So yeah, people, you use all the fundamental constants. Okay, that's cute. But to me, so the exponential function was interesting, right? To measure exponential growth. So compound interest or decay or anything which is continuously growing continuously decreasing growth and decay or dilation or contraction is modeled by the exponential function. Whereas pi comes around from circles and rotation. If you want to rotate a needle, for example, 100 degrees, you need to rotate by pi radians. And I, complex numbers, represents this whole function. We want to imagine axes of a negative rotation. So a change in direction. So the exponential function represents growth and decay in the direction that you already are. When you stick an eye in the exponential, it now it's instead of motion in the same direction as your composition is a motion as a right angle to your composition. So rotation. And then so if the pi i equals minus one tells you that if you rotate for a time pi, you end up at the other direction. So it unifies geometry through dilation and exponential growth dynamics through this act of complexification, rotation by by by. So it connects together all these two mathematics. Yeah, that I was doing complex and complex and complex numbers. They were all considered almost their own next door neighbors in mathematics because of this identity. So I think the thing you mentioned is cute, the collision of notations from these disparate fields. Is just a frivolous side effect or do you think there is legitimate like value in when the notation, all the old friends come together. Right. Well, it's it's confirmation that you have the right concepts. So when you first study anything, you have to measure things to give them names. And initially sometimes because your model is again too far off from reality, you give the wrong things the best names. And you only find out later what's what's really important. Physicists can do this sometimes. I mean, but it turns out okay, so actually physics of so equals empty squared. Okay, so one of the big things was the eat. So when when Aristotle first came up with his laws of motion and then then Galileo and Newton and so forth, they saw the things they could measure. They could measure mass and acceleration and force and so forth. So Newtonian mechanics, for example, ethical is MA was the famous Newton's second law of motion. So those were the primal objects. So they gave them the central building in the theory. It was only later after people started analyzing these equations that they always seem to be these quantities that were conserved. So a particular momentum in energy. And it's not obvious that things happen energy. Like it's not something you can directly measure the same way you can measure mass and velocity. So both. But over time, people realized that this was actually a really fundamental concept. Hamilton eventually in 19th century reformulated Newton's laws of physics into what is called Hamiltonian mechanics, where the energy which is now called the Hamiltonian was the dominant object. Once you know how to measure the Hamiltonian of any system, you can just completely detect the dynamics. Like what happens to it or to all the states? Like it's it really was a central actor, which was not obvious initially. And this helped actually this change of perspective really helped when quantum mechanics came along. Because the early physicists who studied quantum mechanics, they had a lot of trouble trying to adapt in Newtonian thinking, because the other thing was particle and so forth to to quantum mechanics, you know, because I think people was a was a wave, it just looked really, really weird. Like you ask, what is the quantum version of F equals M a and it's really, really hard to to give an answer to that. But it turns out that the Hamiltonian was just so secretly behind the scenes in classical mechanics, also is the key object in quantum mechanics that this is also an object of the Hamiltonian. It's a different type of object is what's called an operator rather than a function, but. But again, once you specify it, you specify the entire dynamics, so the circle showing this equation, that tells you exactly how quantum systems evolve once you have the Hamiltonian. So side by side, they look completely different objects, like one in those particles, one of those waves, and so forth. But with this centrality, you could start actually transferring a lot of intuition and facts from classical mechanics to quantum mechanics. So for example, in classical mechanics, there's this single-notice theorem. Every time there's a symmetry in a physical system, there was a conservation law. So the laws of physics are translation invariant. Like if I move ten steps left, I experience the same laws of physics as I was here. And that corresponds to conservation momentum. If I turn around by some angle, again, I experience the same laws of physics, this corresponds to the conservation of angular momentum. If I wait for ten minutes, I still have the same laws of physics. So there's time transition invariants, this corresponds to the law of conservation energy. So there's this fundamental connection between symmetry and conservation. And that's also true in quantum mechanics, even though the equations are completely different. But because they're both coming from the Hamiltonian, the Hamiltonian controls everything. Every time the Hamiltonian has a symmetry, the equations will have a conservation law. So it's once you have the right language, it actually makes a lot cleaner. One of the problems is why we can't unify quantum mechanics and general relativity yet. We haven't figured out what the fundamental object is. Like, for example, we have to give up the notion of space and time being these almost-euclideant-type spaces. And it has space. And we kind of know that at very tiny scales, there's going to be quantum fluctuations, there's a space-time foam. And trying to use Cartesian coordinates XYZ is going to be, it's a non-starter. But we don't know how to replace it with. We don't actually have the mathematical concepts. The analog of the Hamiltonian that sort of organized everything. Does your gut say that there is a theory of everything? So this is even possible to unify, to find this language that unifies general relativity and quantum mechanics? I believe so. I mean, the history of physics has been out of unification, much like mathematics over the years. Actuality and magnetism were separate theories and then backs were unified them. You can unify the motions of heavens for the motions of objects on the earth and so forth. So it should happen. It's just that the, again, to go back to this model of the observations and theory. Part of our problem is that physics is a victim of its own success. That of two big theories of physics, general relativity and quantum mechanics are so good now. So together, they cover 99.9% of sort of all the observations we can make. And you have to like either go to extremely insane particle celebrations or the early universe or things that are really hard to measure, in order to get any deviation from either of these two theories to the point where you can figure out how to come together. But I have faith that we've been doing this for centuries, we've made progress before. There's no reason why we should stop. Do you think you will be a mathematician that develops a theory of everything? What often happens is that when the physicists need some theory of mathematics, there's often some precursor that the mathematicians worked out earlier. So when Einstein started realizing that space was curved, he went to some mathematician and asked, is there some theory of curved space that the mathematicians already came up with that could be useful? So yeah, I think a remark came up with something. And so yeah, we might have developed a remaining geometry, which is precisely a theory of spaces that are curved in various general ways, which turn out to be almost exactly what was needed by Einstein's theory. This has gone back to the two big news, unreasonable effectiveness of mathematics. I think the theories that work well, the explain the universe, tend to also involve the same mathematical objects that work well to solve mathematical problems. And there's just both ways of organizing data in useful ways. It just feels like you might need to go some weird land that's very hard to intuit. You have like string theory? That was a leading candidate for many decades. It's slowly pulling out of fashion because it's not matching experiment. So one of the big challenges, of course, like you said, is experiment is very tough. Yes, because of how effective both theories are. But the other is like, you're talking about, you're not just deviating from space time. You're going into some crazy number of dimensions, you're doing all kinds of weird stuff that to us, we've gone so far from this flat earth that we started that. Yeah, yeah, yeah. It's very hard to use our limited, a descendants of a cognition to intuit what that reality really is like. This is why analogies are so important. The round earth is not intuitive because we're stuck on it. But round objects in general, we have pretty good intuition. We've been to light works and so forth. It's actually a good exercise to work out how eclipses and phases of the sun and the moon and so forth. It can be really easy to explain by round earth and round moon and models. You can just take a basketball and a golf ball and a light source and actually do these things yourself. The intuition is there, but you have to transfer it. That is a big leap in the lecture for us to go from flat to round earth because our life is mostly lived in flat land. To load that information and we're all like to take it for granted, we take so many things for granted because science has established a lot of evidence for this kind of thing. We're in a round rock, flying through space. That's a big leap and you have to take a chain of those leaps, the more and more and more we progress. So modern science is maybe again a victim of its own success. In order to be more accurate, it has to move further and further away from your initial intuition. For someone who hasn't gone through the whole process of science education, it looks more suspicious because of that. We need more grounding. I think there are scientists who do excellent outreach. There's lots of science things that you can do at home. There's lots of YouTube videos. I did a YouTube video with some of Grant Sanderson, we talked about earlier. How the ancient Greeks were able to measure things like the distance of the moon, distance of the earth. Using techniques that you could also replicate yourself, it doesn't all have to be fancy space telescopes and very intimidating mathematics. I had to recommend that. I believe you have a lecture and you also did an incredible video with Grant. It's a beautiful experience to try to put yourself in the mind of a person from that time, shrouded in a mystery. You're like on this planet, you don't know the shape of it, the size of it. You see some stars, you see some things and you try to like localize yourself in this world and try to make some kind of general statements about distance to place it. Change your perspective is really important. You see travel borders the mind. This is intellectual travel. You know, put yourself in the mind of the ancient Greeks or some other person, some other time period. Make hypotheses, spherical cows, whatever, speculate. And this is what mathematicians do and some other sort of artists do, actually. It's just incredible that given the extreme constraints, you could still say very powerful things. That's why it's inspiring. Looking back in history, how much can be figured out. We don't have much to figure out stuff with. If you propose axioms, then the mathematics lets you follow those axioms to it too, their conclusions. And sometimes you can get quite a lot, quite a long way from initial hypotheses. If you're going to stay in the land of the weird, you mentioned general relativity. You've contributed to the mathematical understanding of Einstein's field equations. Can you explain this work? And from a sort of mathematical standpoint, what aspects of general relativity are intriguing to you, challenging to you? I have worked on some equations, the way you've mapped the equation, or the sigma field model, which is not quite the equation of space-time gravity itself, but of certain fields that might exist on top of space-time. Einstein's equations of relativity just describe space-time itself. But then there's other fields that live on top of that. There's the electromagnetic field, there's the Yang-Mills fields. And there's this whole hierarchy of different equations, of which Einstein's considered one of the most nonlinear and difficult. But relatively low on a hierarchy was this thing called the wave-naps equation. So it's a wave, which at any given point is fixed to be like on a sphere. So I can think of a bunch of arrows in space and time, and yeah, so it's pointing in different directions. But they propagate like waves. If you wiggle an arrow, it will propagate and make all the arrows move kind of like a sheep's or wheat in a wheat field. And I was interested in the global-acglouded problem again for this question. Is it possible for all the energy here to collect at a point? So the equation I considered was called a critical equation, where it's actually the behavior at all scales is roughly the same. And I was able barely to show that you couldn't actually force a scenario where all the energy concentrated at one point. But at the end you had to dismiss a little bit and moment it was a little bit, it would stay regular. Yeah, this was back in 2000. That was part of why I got interested in Navi-Sogs afterwards, actually. So I developed some techniques to solve that problem. So part of it was, this problem is really nonlinear because of the curvature of the sphere. There was a certain nonlinear effect, which was a non-perturbative effect. It was, when you sort of looked at it normally, it looked larger than the linear effects of the wave equation. And so it was hard to keep things under control, even when the energy was small. But I developed what's called a gauge transformation. So the equation is kind of like an evolution of hives of wheat and they're all bending back and forth. So there's a lot of motion. But if you imagine like stabilizing the flow by attaching little cameras at different points in space, which I'm trying to move in a way that captures most of the motion. And under this stabilized flow, the flow becomes a lot more linear. I discovered a way to transform the equation to reduce the amount of nonlinear effects. And then I was able to solve the equation. I found this transformation while visiting my art in Australia. And I was trying to understand the dynamics of all these fields. And I couldn't do a pen and paper. And I had non-office-ladive computers to do any computer simulations. So I ended up closing my eyes, people on the floor, and just imagining myself to actually be the specter field, rolling around to try to see how to change coordinates in such a way that somehow things in order of actions would behave in a reasonable linear fashion. And my art walked in while I was doing that. And she was asking, what am I doing doing this? It's complicated. Yeah, yeah. And it's okay, fine. You're a young man. I don't ask questions. I have to ask about the, you know, how do you approach solving difficult problems? If it's possible to go inside your mind when you're thinking, are you visualizing in your mind the mathematical objects, symbols, maybe, what are you visualizing in your mind usually when you're thinking? A lot of pen and paper. One thing you pick up as a mathematician is sort of a color cheating strategically. So the beauty of mathematics is that you get to change the world, change the problem, change the rules as you wish. You don't get to do this for any other field. Like, you know, if you're an engineer and someone says, put a bridge over this river, you can't say, I want to build this bridge over here instead or I want to put out a paper instead of steel. But a mathematician, you can do whatever you want. It's like trying to solve a computer game where you can get this unlimited cheat codes available. So, you can set this as a dimension that's large. I've set it to one. I'd solve the one-dimensional problem first. Or there's a main term and an error term. I'm going to make a spherical color assumption. I'll assume the error term is zero. And so the way you solve these problems is not in sort of this Ironman mode where you make things maximally difficult. But actually, the way you should approach any reasonable math problem is that if there are 10 things that are making it like difficult, find a version of them that turns off 9 of the difficulties, but only keeps one of them. And solve that. And then that just... So you install 9 cheats. Okay, you install 10 cheats then the game is trivial. You install 9 cheats. You install one problem that teaches you how to do that to get difficulty. And then you turn that one off and you use someone else, somebody else on. And then you sort that one. And after you know how to solve the 10 problems, 10 difficulty separately, then you have to start merging them if you had a time. I even as a kid, I watched a lot of these Hong Kong action movies. This is from a culture. And one thing is that every time it's a fight scene, you know, something like that, the hero gets swarmed by 100 bad guy goons or whatever. But it will always be choreographed so that you'd always be only fighting one person at a time. And then you would defeat that person and move on. And because of that, they could defeat all of them. But whereas if they had fought a bit more intelligently and just swarmed the guy once, it would make for much much worse cinema. But they would win. Are you usually pen and paper? Are you working with computer and a late deck? Mostly pen and paper actually, so in my office I have four giant blackboards. And sometimes I just have to write everything I know about the problem on the four blackboards and then sit my couch and just sort of see the whole thing. Is it all symbols like notation or is there some drawings? Oh, there's a lot of drawing and a lot of bespoke doodles that only makes sense to me. And it's a bit of a blackboard you raise. It's a very organic thing. I'm beginning to use more and more computers partly because AI makes it much easier to do simple coding things. If I wanted to plot a function before which is moderately complicated as some iteration or something, I'd have to remember how to set up a Python program. And how does a full loop work and debug it and it would take two hours and so forth. And now I can do it in 10, 15 minutes as much. I'm using more and more computers to do simple explorations. Let's talk about AI a little bit if we could. So maybe a good entry point is just talking about computer assisted proofs in general. Can you describe the lean formal proof programming language in how it can help as a proof? As a proof assistant and maybe how you started using it and how it has helped you? So lean is a computer language much like sort of standard languages like Python and C and so forth. Except in most languages the focus is on using executable code. Lines of code do things. They flip bits or they make a row one move or they deliver you text on it or something. So lean is a language that can also do that. It can also be run as a standard traditional language, but it can also produce certificates. So a software like Python make do a computation and give you the answer is seven. Does the sum of people's four is equal to seven, but lean can produce not just the answer, but a proof that how it got the answer of seven as three plus four. And all the steps involved in. So it's a so it creates these more complicated objects, not just statements, but statements were proofs attached to them. And every line of code is just a way of piecing together previous statements to create new ones. So the idea is not new. These things are called proof assistants. And so they provide languages for which you can create quite complicated, intricate, mathematical proofs. And they produce these certificates that give it 100% guarantee that your arguments are correct. If you trust the compiler, of the name, but they made the compiler really small. And you can have several different competitors available for the same level. Can you give people some intuition about the difference between writing on pen and paper versus using lean programming language? How hard is it to formalize the statement? So lean, a lot of mathematicians will invoke in the design of lean. So it's designed so that individual lines of code resemble individual lines of mathematical argument. You might want to introduce a variable. You want to improve our contradiction. There are various standard things that you can do. And it's written so ideally it should have a one-twenties correspondence. In fact, it isn't because lean is like explaining a proof to an extremely pedantic colleague who will point out, did you really mean this? What happens if this is zero? How do you justify this? So lean has a lot of automation in it to try to be less annoying. So for example, every mathematical object has become a type. If I talk about X, is X a rule number or a natural number or a function or something. If you write things informally, it's often in third context. You say clearly X is equal to that X be the sum of Y and Z and Y and Z were already rule numbers. So lean can do a lot of that. But every so often it says wait a minute. Can you tell me more about what this object is? What type of object is? You have to think more at a philosophical level, not just sort of computations you're doing, but sort of what each object actually is in some sense. Is it using something like LLMs to do the type inference or the like you mentioned earlier? It's using much more traditional, good or fashion to AI. You can represent all these things as trees and there's always algorithm to match one tree to another tree. So it's actually doable to figure out if something is a real number or a natural number. Every object comes with a history of what it came from and you can kind of trace, oh I see. So it's designed for reliability. Modern AI is not used in a disjoint technology. People are beginning to use AI on top of lean. So when a mathematician tries to program a proof in lean, often there's a step. Now I want to use the fundamental thing with calculus to do the next step. So the lean developers have built this massive project called methylib, a collection of tens of thousands of useful facts about mathematical objects. And somewhere in there is the fundamental calculus, but you need to find it. So a lot of the bottleneck now is actually LLMs search. There's a tool that you know is in there somewhere and you need to find it. And so there are various search engines specialized for methylib that you can do. But there's now these large language models that you can say, I need the fundamental calculus at this point. And I said, okay, for example, when I code, I have GitHub code pilot installed as a plugin to my IDE. And it scans my text and it sees what I need. I'm not even typing. Now I need to use the fundamental calculus. And it might suggest try this and maybe 25% of the time it works exactly. And then another 10-15% of the time it doesn't quite work. But it's close enough that I can say, oh, I've just changed it here and here. It will work. And then half the time it gives me complete rubbish. So, but people are beginning to use AI's a little bit on top. Most of them are level of basically fancy auto-complete. That you can type half of one line of approved and it will find. Yeah, but a fancy, especially fancy with the sort of capital that our app is. Remove some of the friction. And the mathematician might feel when they move from pattern paper to formalizing. Yes. Yeah. So right now I estimate that the effort, the time and effort taken to formalize the proof is about 10 times the amount taken to write it out. So it's doable, but you don't, it's annoying. But this is like kill the whole vibe of being a mathematician. Yeah. So, I mean, having a pedantic worker. Right. Yeah. If that was the only aspect of it. Okay. But, okay. There's something, because it was actually more pleasant to do this formally. So, there was a theorem I formalized. And there was a certain constant 12 that came out of it in the final statement. And so this 12 had to be carried all through the proof. And like everything had to be checked. Because all the, all these other numbers had to be consistent with this final number 12. And then, so we want a paper through this theorem with this number 12. And then a few weeks later, so I said, oh, we can actually improve this 12 to 11 by reworking some of these steps. And then this happens with pen and paper. Like every time you change your parameter, you have to check line by line that every single line of your proof still works. And there can be subtle things that you didn't quite realize. Some probably is not a mature, but you didn't even realize that you were taking advantage of. So a proof can break down at a subtle place. So we had formalized the proof of this constant 12. And then when this new paper came out, we said, oh, okay. So that took like three weeks to formalize and like 20 people to formalize this, this is original proof. I said, oh, but now let's, let's update the total 11. And what you can do with lean, so you just, in your head, find a theorem, you change a 12 to 11. You run the compiler and like of the thousands of lines that code you have, 90% of them still work. And there's a couple that are lined in red. Now I can't just buy these steps, but it immediately isolates which steps you need to change. But you can skip over everything, which works just fine. And if you program things correctly with good programming practices, most of your lines will not be read. And there just be a few places where you, I mean, if you don't hard code your constants, but you sort of, you, you smart tactics and so forth, you can, you can localize the things you need to change to a very small period of time. So it's like it within a day or two, we had updated our proof. Of course, this is very quick process here. You make a change. There are 10 things now that don't work for each one. You make a change and now there's five more things that don't work, but the process converges much more smoothly than with pen and paper. So that's for writing. Are you able to read it? Like if somebody else has a proof, are you able to like, how, what's the versus paper and yeah, so the proof is a longer, but each individual piece is easier to read. So if you take a math paper and you jump to page 27 and you look at paragraph six and you have a line of text or math, I often can't read it immediately because it assumes various definitions, which I have to go back and maybe on 10 pages earlier, this was defined. And the proof is scattered all over the place and you basically are forced to read fairly sequentially. It's not like say a novel where like, you know, in a theory, you could open up a novel halfway through and start reading. There's a lot of context, but when I've proven lean, if you put your cursor on a line code, every single object there, you can hover over it and it would say what it is, what it came from, where it's justified, you can trace things back much easier than so flipping through a math paper. So one thing a lean really enables is actually collaborating on proofs at a really atomic scale that you really couldn't do in the past. So traditionally, pen and paper, when you want to collaborate with another mathematician, either you do it at a blackboard where you can really interact. But if you're doing it sort of by email or something, basically, yeah, you have to segment it. I'm going to finish section three, you do section four, but you can't really sort of work on the same thing, collaborative at the same time. But with lean, you can be trying to formalize some portion of the proof and say, I got stuck at line 67 here. I need to prove this thing, but it doesn't quite work. Here's like the three lines of code I've been trouble with. But because all the context is there, someone else can say, oh, okay, I recognize what you need to do. You need to apply this trick or this tool. And you can do extremely atomic level conversations. So because of lean, I can collaborate with dozens of people across the world. Most of them I don't have never met in person. And I may not know, actually, even whether they're reliable there are in their proofs they can make. But lean gives me a certificate of trust. So I can do trust this mathematics. So there's so many interesting questions. There's one you're known for being a great collaborator. So what is the right way to approach solving a difficult problem mathematics when you're collaborating? Are you doing a divide and conquer type of thing or are you brainstorming? Are you focused in a particular part and your brain storming? There's always a brain storming process first. Math research projects by their nature. When you start, you don't really know how to do the problem. It's not like an engineering project where some other theory has been established for decades. And its implementation is the main difficulty. You have to figure out even what is the right path. So this is what I said about cheating first. It's like to go back to the bridge building analogy. First, assume you have infinite budget and unlimited amounts of workforce and so forth. Now can you build this bridge? Now have infinite budget but only finite workforce. Can you do that? Of course, no engineer can actually do this. They have fixed requirements. There's this jam sessions at the beginning where you try all kinds of crazy things. You make all these assumptions that are unrealistic but you plan to fix later. You try to see if there's even some skeleton, or if it's going to push them, might work. And then hopefully that breaks up the problem into smaller subproblems which you don't know how to do. But then you focus on the sub ones. And sometimes different collaborators are better at working on certain things. So one of my themes I'm known for is the theme of Ben Green, which is called the Green Tile theorem. It's a statement that the primes contain earthquake precautions of any event. So it was a modification of this theme of summer ready. And the way we collaborated was that Ben had already proven a similar result for progressions of then three. He showed that sets like the primes contain lots and lots of questions of plan three. Even and even subsets of the primes, certain subsets do. But his techniques only worked for for their food precautions. They didn't work for longer progressions. But I had these techniques coming from a gothic theory, which is something that I had been playing with and I knew better than Ben at the time. And so if I could justify certain randomness properties of some set relating to the primes, like there's a certain technical condition which if I could have it, if Ben could supply me this fact, I could give I could conclude the theorem. But I what I asked was a really difficult question in number theory, which he said, no, there's no way we can prove this. Can you so he said, can you prove your part of the theorem using a week ago hypothesis that I have a chance to prove it? And he proposed something which he could prove that it was too weak for me. I can't use this. So there's this there's this conversation going back and forth. So different cheats to yeah, I want to keep more he wants to keep less. But eventually we found a property which he could prove in be I could use. And then we could prove out here. And so there's there's a there's a there all kinds of dynamics. I mean, it's every every collaboration has a has a has some story. No two are the same. And then on the flip side of that like you mentioned with lean programming. Now that's almost like a different story because you can do you can create I think you've mentioned a kind of a blueprint for a problem. And then you can really do a divide and conquer with lean where you're working on separate parts. Right. And they're using the computer system proof checker essentially to make sure that everything is correct along the way. Yeah, so it makes everything compatible and yeah, and trustable. Yeah, so currently only a few mathematical projects can be cut up in this way. At the current state of the art, most of the lean activity is on formalizing. I've already been proven by humans. I'm at paper basically is a boot a blueprint in a sense. It is taking a difficult statement like big theorem and breaking up into me are 100 little numbers. But often not all written with enough detail that each one can be sort of directly formalized. A blueprint is like a really pedantically written version of a paper where every step is explained as much detail as possible. And to try to make each step kind of self-contained. And depending on only a very specific number of previous statements, I mean proven. So that each node of this blueprint graph that gets generated can be tackled independently of all the others. And you don't even need to know how the whole thing works. So it's like a modern supply chain. And if you want to create an iPhone or some other complicated object, no one person can build a single object. But you can a specialist who just if they're given some widgets from a similar company, they can combine them together to form a slightly bigger widget. I think there's a really exciting possibility because you can have if you can find problems that could be broken down in this way, then you can have thousands of contributors, right? Yes, yes, yes. So I told you before about the split between theoretical and experimental mathematics. And right now, most mathematics is theoretical and when you type it is experimental. I think the platform that lean and other software tools, so get help and things like that. Allow the will allow experimental mathematics to be to scale up to a much greater degree than we can do now. Right now, if you want to do any mathematical exploration of some mathematical pattern or something, you need some code to write out the pattern. I mean, sometimes there are some computer algebra packages that help. But often it says one mathematician coding lots and lots of Python or whatever. And because coding is such an error for an activity, it's not practical to allow other people to collaborate with you on writing modules for your code. Because if one of the modules has a bug in it, the whole thing is unreliable. So you get these Spockedity code written by non-operfessional programmers with my mathematicians. And they're clunky and slow. And so because of that, it's hard to really mass produce experimental results. But I think with lean, I mean, I'm already starting some projects where we are not just experimenting with data, but experimenting with proofs. So I have this project called the Equational Theory's project. Basically, we generated about 22 million little problems at abstract algebra. We should back up and tell you what the project is. Okay, so abstract algebra studies operations like multiplication and addition and the abstract properties. Okay, so multiplication, for example, is commutative. X times Y is always Y times X is for numbers. And it's also associative. X times Y times Z is the same as X times Y times Z. So these operations obey some laws that don't obey others. For example, X times X is not always equal to X. So that laws are not always true. So given any operation, it obeys some laws and not others. And so we generated about 4,000 of these possible laws of algebra that certain operations can satisfy. And our question is, which laws imply which other ones? So for example, does commutativity imply associativity? And the answer is no, because it turns out you can describe an operation which obeys the cognitive law, but it doesn't obey the associative law. So by producing an example, you can show that commutativity does not imply associativity. But some of the laws do imply other laws by substitution and so forth. And you can write down some algebraic proofs. So we look at all the pairs between these 4,000 laws and they start with 22 million of these pairs. And for each pair, we ask, does this law imply this law? If so, give a proof, if not, give a count example. So 22 million problems, each one of which you could give to an undergraduate algebra student. And they had a decent chance of solving the problem. Although there are at least 20 million, they're like a hundred or so, that are really quite hard. But a lot are easy. And the project was just to work out to determine the entire graph, like which ones imply which other ones? That's an incredible project, by the way. Such a good idea, such a good test that the very thing we've been talking about at a scale that's remarkable. Yeah, so it would not have been feasible. I mean, the state of the art in the literature was like 15 equations and sort of highly implied. That's sort of the limit of what a human repentant people can do. So you need to scale that up. So you need a crowdsource, but you also need to trust all the, no one person can check 22 million of these proofs. You need to be computerized. And so it only became possible with Leane. We were hoping to use a lot of AI as well. So the project is almost complete. So of these 20 million, all but two have been settled. Wow. And actually, and all those two, we have a pen and paper proof of the two. And we're formalizing. In fact, as this morning, I was working on it, finishing it. So we're almost done on this. It's incredible. Yeah. How many people were able to get? About 50. Which in mathematics is considered a huge number. It's a huge number. It's crazy. Yeah. So we got about a paper 50 oldest and a big appendix of food contributor. What? Here's an interesting question. Not to maybe speak even more generally about it. When you have this pool of people, is there a way to organize the contributions by level of expertise to the people, of the contributors? No, okay. I'm asking you a lot of pot head questions here, but I'm imagining a bunch of humans and maybe in the future some AI is. Can there be like an elo rating type of situation where like a gamification of this? The beauty of all these lean projects is that automatically you get all this data. Yeah. So like everything is to be uploaded with this guitar and get up tracks who contributed what? So you could generate statistics from any any later point in time. You can say, oh, this person contributed this many lines of code or whatever. I mean, these are very crude metrics. I would definitely not want this to become like part of your tenure review or something. But I mean, I think already in enterprise computing, right? People do use some of these metrics as part of the assessment of performance of an employee. Again, this is the direction which is a bit scary for academics to go down. We don't like metrics so much. And yet academics use metrics. They just use all the ones. Number of papers. Yeah, it's true. It's true that I mean, it feels like this is a metric while flawed is going in the more in the right direction. Yeah, it's interesting. At least it's a very interesting metric. Yeah, I think it's interesting to study. I think you can do studies of whether these are better predictors. There's this problem called good heart slow. If a statistic is actually used to incentivize performance, it becomes gained. And then it is no longer a useful measure. No humans always give. Yeah, I know. I mean, it's gaming these rational. So what we've done for this project is self-report. So there are actually standard categories from the sciences of what types of contributions people give. So there's this concept and validation and resources and coding and so forth. So we, there's a standard list of pro or so categories. And we just ask each contributor to this big matrix of all the all the all the other categories. Just to take the boxes where they think they're contributed. And just give a rough idea, you know, like also you did some coding and and and you provided some compute, but you didn't do any for pen and paper verification or whatever. And I think that that works out traditionally mathematicians just order alphabetically by surname. So we don't have this tradition as in their sciences of lead author and second author and so forth. Which we're proud of. We make all the authors equal status, but it doesn't quite scale to this size. So a decade ago I was involved in these things called polymath projects. It was the crowdsourcing mathematics, but without the lean component. So it was limited by you needed a human moderator to actually check that all the contributions coming in were actually valid. And this was a huge bottleneck actually. But still we had projects that were, you know, 10 authors or so. But we had decided at the time not to try to decide who did what, but to have a single pseudonym. So we created this fictional character called DHJ Paddy Math in the spirit of Bobecky, who is the pseudonym for famous group of mathematicians in the 20th century. And so the paper was altered on the pseudonym. So none of us got the author credit. This actually turned out to be not so grateful couple of reasons. So one is that if you actually wanted to be considered a ten year order, but you could not use this paper in your, as you submitted it as a only publications because it didn't have the formal author credit. But the other thing that we've recognized a much later is that when people referred to these projects, they naturally refer to the most famous person who was involved in the project. So this was Tim Gowas' play of a project. This was Tim Gowas' play of a project. And not mention the other 19 or whatever people that were involved. So we're trying something different this time around where we have everyone's an author, but we will have an appendix with those matrix and we'll see how that works. So both projects are incredible, just the fact that you're involved in such huge collaborations. But I think I saw a talk from Kevin Buzzer about the lean programming language just a few years ago and you're saying that this might be the future of mathematics. And so it's also exciting that you're embracing one of the greatest mathematicians in the world embracing this. What seems like the paving of the future of mathematics. So I have to ask you here about the integration of AI into this whole process. So DeepMind's Alpha Proof was trained using reinforcement learning on both failed and successful formal lean proofs of IMO problems. So this is sort of high level high school. Oh very high level. Yes. High school level mathematics problems. What do you think about the system and maybe what is the gap between this system that is able to prove the high school level problems versus gradual level problems? Yeah, the difficulty increases exponentially with the number of steps involved in the proof is a comment or explosion. So I think of large language models is that they make mistakes. And so if your proof has got 20 steps and your last line of work has a 10% failure rate at each step of going in the wrong direction. It's extremely unlikely to actually reach the end. Actually, just to take a small tangent here is how hard is the problem of mapping from natural language to the formal program? Oh yeah, it's extremely hard actually. Natural language. It's very fault tolerant. Like you can make a few minor grammatical errors and speak in the second language can get some idea of what you're saying. Yeah, but formal language. If you get one little thing wrong, I do that the whole thing is nonsense. Even formal to formal is very hard. There are different incompatible proofs of some languages. There's lean but also cock and Isabelle and so forth. And actually even converting from a formal language to formal language. It's an unsolved problem. That is fascinating. Okay, so but once you have an informal language, they're using their RL train model. So something akin to Alpha zero that they used to go to then try to come up with proofs. They also have a model. I believe it's a separate model for geometric problems. So what impresses you about the system and what do you think is the gap? Yeah, we talked earlier about things that are amazing over time become kind of normalized. So now somehow it's of course geometry is still available from right. That's true. That's true. I mean, it's still beautiful. Yeah, yeah. It's a great work. It shows what's possible. I mean, it's it. The push doesn't scale currently. Yeah, three days of Google's service, server time to sort of one high school math format. This is not a scalable prospect, especially with the exponential increase in as they compare. As they complexity increases, which mentioned that they got a silver medal performance. The equivalent of I mean, yeah, equivalent of I mean, they suffer as well. They took way more time than was a lot of and they had this assistance with where the humans started helped by formalizing. But also they're giving us those formats for the solution, which I guess is formally verified. So I guess that's fair. There are efforts. There will be a proposal at some point to actually have an AI method of the year, where at the same time as the human contestants get the actual little bit problems, yes, we'll also be given the same problems, the same time period. And the outputs have to be created by the same judges. And which means that will have to be written in natural language rather than formal language. I hope that happens. I hope this is what happens. I hope I hope it won't happen this IMO. The performance is not good enough in the time period. But there are smaller competitions. The competitions where the answer is a number rather than a long form proof. And that's that's a lot better at problems where there's a specific numerical answer. Because it's easy to reinforce to reinforcement learning. You've got the right answer, you've got the wrong answer. It's a very clear signal. But a long form proof either has to be formal and then the lean can give it thumbs up, thumbs down, or it's informal. But then you need a human to create it. And if you try to do billions of reinforcement learning, you know, once you're not, you can't hire enough humans to create those. It's already hard enough for the last time I could want us to do reinforcement learning on just the regular text that people get. But now if you hire people not just give thumbs up thumbs down, but actually check the output mathematically. That's too expensive. So if we explore this possible future, what is the thing that humans do that's most special in mathematics? So that you could see AI not cracking for a while. So inventing new theories. So coming up with new conjectures versus proving the conjectures, building new abstractions, new representations, maybe an AI dinosaur with seeing new connections between disparate fields. That's a good question. I think the nature of what mathematicians do of a time has changed a lot. So a thousand years ago mathematicians had to compute the date of Easter. And there's really complicated calculations, but it's all automated, but it's all the way to centuries. We don't need that anymore. They used to navigate to do spherical navigation, spherical trigonometry to navigate how to get from the old part of the new. So I think it's very complicated calculations again, we've been automated. Even a lot of undergraduate mathematics, even before AI, like Wolfmalfa, for example, is not a language, but it can solve a lot of undergraduate law of math tasks. So on the computational side, verifying routine things, like having a problem and say, here's a problem in partial differential equations. Could you still be using any of the 20 standard techniques? And they have a yes, I've tried all 20 and here that 100 different permutations and disease my results. And that type of thing, I think it worked very well. Type of scaling to once you've solved one problem to make the AI attack 100 adjacent problems. The things that humans do still, where the AI really struggles right now is knowing when it's made a wrong turn. And you can say, I'm going to solve this problem, I'm going to split up this woman into these two cases. I'm going to try this technique. And sometimes if you're lucky, it's a simple problem, it's the right technique and solve the problem. Sometimes it will get, it will have a problem, it would propose an approach which is just complete nonsense. And, but like it looks like a proof. So this is one annoying thing about LLM generated mathematics. So, yeah, we've had human general mathematics as a very low quality. So, you know, some missions, we don't have the formal training and so forth. But if a human proof is bad, you can tell this bad pretty quickly. It makes really basic mistakes. But the AI general proofs they can look superficially flawless. And that's partly because that's what the reinforcement learning has, like you train them to do. To make things, to produce text that looks like what is correct. Which for many applications is good enough. So, it was often really subtle. And then when you spot them, they're really stupid. Like no human would have vacuumed that mistake. Yeah, it's actually really frustrating in the programming context because I program a lot. Yeah, when a human makes low quality code, there's something called code smell. You can tell immediately, like, they're signs. But with AI generate code, and then you're right. Eventually, you find an obvious dumb thing that just looks like good code. Yeah, so it's very tricky to, and frustrating for some reason to. Yeah, so the sense of smell. This is one thing that humans have. And there's a metaphorical mathematical smell that is not clear how to get the AI. Eventually, I mean, so the way alpha zero and so forth make progress and go and chess and so forth is. It's in some sense they have developed a sense of smell for go and chess positions. That this position is good for white. It's good for black. They can't initiate why. But just having that sense of smell lets them strategize. So if AI's gained that ability to sort of a sense of viability of certain proof strategies. So you can say, I'm going to try to break up this problem into two small sub tasks. And then you can say, oh, this looks good. The two tasks look like they're simpler tasks than your main task. And they still got a good chance of being true. So this is good to try. Or you made the problem worse because each of the two sub problems is actually harder than your original problem. Which is actually what normally happens if you try a random thing to try. Normally, it's very easy to transform a problem into an even harder problem. Very rarely do you transform a simpler problem. So if they can pick up a sense of smell, then they could maybe start competing with human law mathematicians. So this is a hard question, but not competing, but collaborating. If, okay, hypothetical, if I gave you an oracle that was able to do some aspect of what you do and you could just collaborate with it. What would that oracle, what would you like that oracle to be able to do? Would you like it to maybe be a verifier like check to the code smut like your yes, a professor towel. This is the correct. This is a good. This is a promising fruitful direction. Yeah. Yeah. Yeah. Or would you like it to generate possible proofs and then you see which one is the right one? Or would you like it to maybe generate different representation, different totally different ways of seeing this problem? I think all of the above. A lot of it is we don't know how to use these tools because it's a paradigm that it's not. Yeah, we have not had in the past assistance that are competent enough to understand complex instructions that can work at massive scale, but also unreliable. It's an interesting, but unreliable in subtle ways was we was sufficiently good output. It's an interesting combination. You have graduated students who work with who kind of like this, but not a scale. And we had previous software tools that can work at scale, but very narrow. So we have to figure out how to use. I mean, so Tim Kowd, you imagine Yakis for sale in 2000. He was envisioning what mathematics would look like in actually two and a half decades. And I'm surprised. Yeah, he wrote in his article, like a hypothetical conversation between a mathematical assistant of the future and himself, you know, a financial problem. And they would have a conversation that sometimes the human would propose an idea and the AI would would evaluate it. Sometimes the AI would propose an idea. And sometimes a competition was required and the AI would just go and say, OK, I've checked the 100 cases needed here. Or the first you said this is for all end up, check the end up to 100. And it looks good so far or hang on. There's a problem that equals 46. So just a free form conversation where you don't know in advance where things are going to go, but just based on I think ideas that go both sides, calculations, both sides, I've had conversations with AI where I say, let's we're going to collaborate to solve this math problem. And it's a problem that I already know the solution to. So I try to prompt it. OK, so he's a problem. I suggest using this tool and it will find this lovely argument using a completely different tool, which eventually goes into the weeds and say, no, no, try using this. And I start using this and then you'll go back to the tool that I wanted to do before. And you have to keep railroading it onto the path you want. And I could eventually force it to give the proof I wanted. But it was like hurting cats. And we might have personal effort I had to take to not just to prompt it, but I also check it output because it looked like it was going to work. I know there's a problem on 917 and basically arguing with it. Like it was more exhausting than doing it on assisted. So like it. But that's the currency to be honest. I wonder if there's there's a phase shift that happens towards no longer feels like hurting cats and maybe you'll surprise us how quickly that comes. I believe so. So in formalization, I mentioned before that it takes 10 times longer to formalize a proof that I had with these modern AI tools is also just better tooling. The lean developers are doing a great job adding more and more features and making it user-friendly. It's going from 9 to 8 to 7. Okay, no big deal. But one day you'll drop all the one. And that's the phase shift because suddenly it makes sense when you write a paper to write it in lean first or through a conversation with AI which is generating lean on the fly with you. It becomes natural for journals to accept and maybe they'll offer expedite referring. If a paper has already been formalized in lean, they'll just have to refer you to comment on the significance of the results and how it connects to the literature and not worry so much about the correctness because it has been certified. The paper is getting longer and longer in mathematics and it's harder and harder to get good for referring for the really long ones unless they really important. It is actually an issue which in the formalization is coming in just the right time for this to be. And the easier and easier it gets because of the tooling and all the other factors then you're going to see much more like math, lib will grow. Right. Potentially exponentially. Yeah, yeah. It's a virtuous cycle. One phase shift of this type that happened in the past was the adoption of late tech. So late tech is this type of language that all mathematicians use now. So in the past people used all kinds of word processes and typewriters and whatever. But at some point late tech became easier to use than or other competitors and like people to switch within a few years like it was a dramatic phase shift. It's a wild out there question but what year, how far away are we from a AI system being a collaborator on a proof that wins the field's model of that level. Okay. Well, it depends on the level of collaboration. No, like it deserves to be to get the fields model. Like so I have an idea. Already, like I can imagine if it was a metal wound paper having some AI systems and writing it, you know, just like the all complete alone is already I use it like it speeds up my own writing. Like, you know, you can have a theorem and you have a proof of three cases and I write down the proof of first case and the autocomplete just suggests I know these are the proof of the same case could work. And like it was exactly correct. That was great. Save me like five to minutes of typing. But in that case the AI system doesn't get the fields model. No. I was talking 20 years, 50 years, 100 years. What do you think? Okay. So I gave a prediction in print about 2026, which is now next year. There will be mathematical operations with AI. So I'm not a field model. But like actual research level, I think we've released like published ideas that are generally by AI. Maybe not the ideas, but at least some of the computations. The verifications. I mean, is that already happened? Has everybody happened? Yeah, there are problems that were solved by a complicated process, conversing with AI to propose things and the human goes and tries it. And they can't contact. It doesn't work. But the map was a different idea. It's hard to disentangle exactly. There are certainly math results which could only have been accomplished because there was a math, a human mathematician and an AI involved. But it's hard to sort of disentangle credit. I mean, these tools, they do not replicate all the skills needed to mathematics. But they can replicate some non-trivial percentage of them, 30, 40%. So they can fill in gaps. So coding is a good example. So it's annoying for me to code on Python. I'm not a need of professional programmer. But with AI, the fiction cost of doing it is much reduced. So it feels like after me. AI is getting quite good at literature review. I mean, there's still a problem with hallucinating references that don't exist. But this, I think, is a several problems. If you train in the right way and so forth, you can verify using the internet. In a few years, get the point where you have a lamer that you need and say, anyone proving this lamer before and we will do basically a fancy web search, AI assistant. Yeah, there are these six papers where something similar has happened. I mean, you can ask you right now and it will give you six papers, of which maybe one is legitimate and relevant. One exists, but it's not relevant for our hallucinate. It has a non-zero success rate right now. But there's so much garbage, so much the signal noise ratio is so poor that it's, it's most helpful when you already somewhat know the relationship. And you just need to be prompted to be reminded of a paper that was really subconsciously in your memory. Or just helping you discover new you were not even aware of, but it is the correct citation. Yeah, that's, yeah, that it can sometimes do, but when it does, it's buried in a list of options to which the other are bad. Yeah, I mean, being able to automatically generate a related work section that is correct. Yeah. That's actually a beautiful thing that might be another phase shift because it assigns quite a correctly. Yeah. It does, it breaks you out of the silos of. Yeah, yeah, yeah. No, you know, yeah, no, there's a big hump to overcome right now. I mean, it's like self-driving cars. Right. The safety margin has to be really high to be feasible. So yeah, so there's a last mile problem with a lot of AI applications that they can do. They can do their tools at work 20%, 80% of the time, but it's still not good enough. In fact, even worse than good, some ways. I mean, another way of asking the field's mental question is, what year do you think you'll wake up and be like, real surprised? You read the headline, the news or something happened that AI did, like, you know, real break through something. It doesn't, you know, like, field's metal, even hypothesis. It could be like really just, this Alpha Zero moment would go that way. Right. Yeah, this decade, I can see it like making a conjecture between two unrelated, two things that people thought was unrelated. Oh, interesting, generating a conjecture that's a beautiful conjecture. Yeah. And actually has a real task of being correct and meaningful. Because that's actually kind of doable, I suppose, but the word of the data is, it's really out. Yeah, no, that would be truly amazing. It's, you know, a common model struggle a lot. I mean, so a version of this is, I mean, the physicists have a dream of getting the AI to discover new laws of physics. You know, the dreams you just feed it all this data, okay? And it says that he was a new patent that we didn't see before. But it actually even struggled with the current state of the art, even struggles to discover old laws of physics from the data. I mean, or if it does, there's a big concern with contamination that it did it only because, like, somewhere in this training data, it did some new, you know, boils law or whatever, you're trying to reconstruct. Part of it is that we don't have the right type of training data for this. Yeah, so for laws of physics, we don't have like a million different universes, we have a million different laws of nature. And like, a lot of what we're missing in math is actually the negative space of, so we have published things of things that people have been able to prove. And conjectures that end up being verified or we can't examples produced. But we don't have data on things that were proposed and they're kind of a good thing to try. But then people quickly realized that it was the wrong conjecture and then they, they said, oh, but we should actually change our claim to modify it in this way to actually make it more plausible. There's a trial and error process, which is a real integral part of human mathematical discovery, which we don't record because it's embarrassing. We make mistakes and we only like to publish our wins. And the AI has no access to the data to train on. I sometimes joke that basically, you know, you know, you have to go through a grad school and actually, you know, go to grad courses, do the assignments, go to office hours, make mistakes. Get advice on how to correct the mistakes and learn from that. Let me ask you if I may about Gregory Pearlman. You mentioned that you try to be careful in your work and not let a problem completely consume you. Just you've really fallen love with the problem and it really cannot rest until you solve it. But you also hasted to add that sometimes this approach actually can be very successful. An example you gave is Gregory Pearlman who proved the Poincare conjecture and did so by working alone for seven years with basically little contact with the outside world. Can you explain this one millennial prize problem has been solved Poincare conjecture and maybe speak to the journey that Gregory Pearlman's been on? All right. So it's a question about curved spaces. Earth is a good example. So I think it was a 2D surface. In just being round, you could maybe hit the torus or the hole in it or kind of many holes. And there are many different topologies, uproarie that the surface could have. Even if you assume that it's bounded and smooth and so forth. So we have figured out how to classify surfaces as a first approximation. Everything is determined. I've got the genus. How many holes it has. So the sphere has a genus zero. Don't know it has genus one and so forth. And one way you can tell the surface is apart, probably the sphere has which is going simply connected. If you take any closed loop on the sphere, like a big, closed loop rope, you can contract it to a point and whilst staying on the surface. And the sphere has this property. But a torus doesn't. If you're on the torus and you take a rope that goes around, say the outer diameter, of course, there's no way it can't get through the hole. There's no way to contract at all point. So it turns out that the sphere is the only surface with this property of contractability. I mean, up to like the annuous deformations of the sphere. So some things that I want to call topologically, equal for the sphere. So point where you ask the same question, how are the dimensions? So this becomes hard to visualize because the surface you can think of as embedded in three dimensions. But as curved free space, we don't have good intuition of four years' space to live. And then there are also three space that can't even fit into four dimensions. You need five or six or higher. But anyway, mathematically you can still pause this question. That if you have a bounded three dimensional space now, which also has this simply connected property, that every loop can be contracted, can you turn it into a three dimensional version of the sphere? And so this is the point where you can actually weirdly in higher dimensions, four and five, it was actually easier. So it was solved first in higher dimensions. There's somehow more room to do the deformation. It's easier to move things around to the sphere. But three was really hard. So people tried many approaches. There's sort of commentary approaches where you chop up the service into little triangles or tetrahedron. You just try to argue based on how the faces interact each other. There were algebraic approaches. There's various algebraic objects, like the fundamental group that you can attach to these homology and homology and all these very fancy tools. They also didn't quite work. But Richard Hamilton proposed a partial differential equations approach. So you take, you take, so the problem is that you have this object, which is of secret is a sphere, but it's given to you in a really in a real way. So I think of a ball that's been kind of crumpled up and twisted and it's not obvious that it's the ball. But like if you have some sort of service, which is, which is a deformed sphere, you could, you could, for example, think of it as a surface of a balloon, you could try to inflate it, you blow it up. And naturally, as you fill the air, the wrinkles were sort of smooth out and it will turn into a nice round of sphere. Unless, of course, it was a toy or something, which is it would get stuck at some point, like if you inflate a toy, it would, there would be a point in the middle when the inner ring shrinks to zero, you could, you could, you could, you can't blow up any further. You can't blow any further. So he created this flow, which is called, which is a way of taking an arbitrary surface or space and smoothing it out to make it rounder and rounder to make it look like a sphere. And he wanted to show that either this process would give you a sphere or it would create a singularity. I can very much like how PDs either have global reliability or finite and blow up. It's almost exactly the same thing. It's all connected. And so, and he showed that for two dimensions, two-dimensional services, if you start with some clear, no singularities ever formed. You never manage a trouble and you could flow and it will give you a sphere. And so he got a new proof of the two-dimensional results. But by the way, that's a beautiful explanation of a ratio flow and its application and its context. How difficult is the mathematics here, like for the 2D case? Yeah, these are quite sophisticated equations. On par with the Einstein equations, slightly simpler, but, yeah, but they were considered hard nonlinear equations to solve. And there's lots of special tricks in 2D that that helped. But in 3D, the problem was that this equation was super critical. It has the same problem as Navier's talks. As you blow up, maybe the curvature could get concentrated in finite, small and small regions. And it looked more and more nonlinear and things just looked worse and worse. And we all kinds of singularities that showed up. Some singularities, there's these things called neck pinches where the surface sort of behaves like a barbell and it pinches at a point. Some singularities are simpler than you can sort of see what you do next. You just make a snip and then you can turn one surface into two and you built them separately. But there was the prospect that this was really nasty, like not a singularity showed up that you couldn't see how to resolve in any way. That you couldn't do any surgery too. So you need to classify all the singularities, like what are all the possible ways that things can go wrong. So what problem did, first of all, he made the problem, he turned the problem a super critical problem to a critical problem. I said before about how the invention of energy, the Hamiltonian, that really clarified Newtonian mechanics. So he introduced something which is now called parameters reduced to volume and parameters entropy. He introduced new quantities, kind of like energy, that looked the same at every single scale and turned the problem into a critical one where the nonlinearities actually suddenly looked a lot less scary than they did before. And then he had to solve, he still had to analyze the singularities of this critical problem. And that itself was a problem similar to the way it's actually working actually. So on the level of difficulty of that, so he managed to classify all the singularities of this problem and show how to apply surgery to each of these and through that was able to resolve the point where he can actually. Quite like a lot of really ambitious steps and like nothing that a large language model today, for example, could, I mean, at best I could imagine a more proposing this idea as one of hundreds of different things to try. But the other night would be complete dead ends, but you don't only find out after months of work, he must have had some sense that this was the right track to pursue because it takes years to get from A to B. So you've done, like you said, actually, you see even strictly mathematically, but more broadly in terms of the process, he's done similarly difficult things. What can you infer from the process he was going through because he was doing it alone? What are some low points in a process like that when you start to like you've mentioned heart share like AI doesn't know when it's failing. What happens to you, you're sitting in your office when you realize the thing you did the last few days, maybe weeks, yeah, is a failure. Well, for me, I switch to a different problem. So I'm a fox, I'm not a hair truck, but you will generally that is a break that you can take is just a step away and look at it and you're a problem. Yeah, you can modify the problem too. I mean, you can ask them to cheat. If there's a specific thing that's blocking you that this. Some bad case keeps showing up at that for which your tool doesn't work. You can just assume by fear this bad case doesn't occur. So you do some magical thinking for the, but but but strategically, okay, for the point to see if the rest of the argument goes through. If there's multiple problems with with with your approach, then maybe you just give up. But if this is the only problem that we have, but everything else checks out, then it's still worth fighting. So yeah, you have to do some some so forward reconnaissance sometimes. And that is sometimes productive to assume like, okay, we'll figure it out. Oh, yeah, eventually. Sometimes actually it's even productive to make mistakes. So one of the, I mean, there was a project which actually we wanted some prizes for. It's a bit down before other people were working on this PD problem. Again, actually this blow of regulatory type problem. And it was considered very hard. Sean, we're again, there was another few of us that worked on a special case of this, but he could not solve the general case. And we worked on this problem for two months and we found we thought we solved it. We had this cute argument that if anything fit and we were excited, we were planning celebration, we will get together and have champagne or something. And we started writing it up and one of us, not me, I keep it another call for it said, oh, in this in this lemma here, we, we have to estimate these 13 terms that show up in this expansion. And we estimate 12 of them, but in our notes, I can't find the estimation of 13th. Can you, can someone supply that and I said, sure, look at this and I knew this. Yeah, we didn't cover that we completely omitted this term. And this term, we were in the other 12 terms put together. In fact, we could not estimate this term. And we tried for a few more months and all different permutations. And there was always this one thing one turn that we could not control. And so like, this was very frustrating. But because we had already invested months and months of effort and was already, we stuck at this, we tried increasingly desperate things and crazy things. And after two years, we found that the picture is somewhat different, but quite a bit from our initial strategy, which didn't actually generate these problem edit terms and actually solve the problem. So we solved the problem after two years. But if we hadn't had that initial full storm of nearly solving a problem, we would have given up by month two or something and worked on an easier problem. Yeah, if we had known it would take two years, not sure we would have started the project. Yeah, sometimes actually having the incorrect, you know, it's like Columbus, traveling in New World, they had an incorrect version of measurement of the size of the earth. And they thought he was going to find a new trade route in India. Or at least that was how he sold it in his prospectus. I mean, it could be that he actually secretly knew it. Just on the psychological element, do you have like emotional or self-doubt, the just overwhelmed you most like that? You know, this stuff, it feels like math is so engrossing that like it can break you. When you invest so much yourself in the problem and then it turns out wrong, you could start to similar way chess has broken some people. Yeah, I think different mathematicians have different levels of emotional investment in what they do. I mean, I think some people always have a job. You have a problem and if it doesn't work out, you will call the next one. Yeah, so the fact that you can always move on to another problem. It reduces the emotional connection. I mean, there are cases, you know, so there are certain problems that are what are called macro diseases where we have just latch on to the one problem and they spend years and years thinking about nothing but that one problem. You know, maybe the career suffers and so forth. I say, oh, but how could this big win this world? Once I finish this problem out, I will make up for all the years of lost opportunity. And that's occasionally, occasionally, it works. But I really don't recommend it for people who are at the right fortitude. Yeah, so I've never been super invested in any one problem. One thing that helps is that we don't need to call our problems in advance. Well, when we do crowd proposals, we sound to say we will study this set of problems. But even though we don't promise, definitely by five years, I will supply a proof of all these things. You promise to make some progress or discover some interesting phenomena. And maybe you don't solve the problem, but you find some related problem that you can say something new about. And that's a much more feasible task. But I'm sure for you, there's problems like this. You have made so much progress towards the hardest problems in the history of mathematics. So is there a problem that just haunts you? It sits there in the dark corners, you know, twin prime conjecture, Raymond hypothesis, go about conjecture. Twin prime, that's... Again, so I mean, the promise I could read about this is those are so far out of reach. How do you think so? Yeah, there's no even viable strategy. Like even if I activate all the cheats that I know of in this problem. Like, there's still no way to get me to be. Like, it's... I think it needs to break through in another area of mathematics to happen first. And for someone to recognize that it would be a useful thing to transport into this problem. So we should maybe step back for a little bit and just talk about prime numbers. So they're often referred to as the atoms of mathematics. Can you just speak to the structure that these atoms... So the natural numbers have two basic operations, attention on addition and multiplication. So if you want to generate the natural numbers, you can do one or two things. You can just start with one and add one to itself over and over again. And that generates you the natural numbers. So, additively, they're very easy to generate, one, two, three, five. Or you can take the prime number, if you want to generate multiplicatively, you can take all the prime numbers, two, three, five, seven, and multiply them all together. And together, because you all the natural numbers except maybe four, one. So there are these two separate ways of thinking about the natural numbers. I mean, added to point of view and a more... A particular point of view. And separately, they're not so bad. So like, any question about that natural numbers, only was addition. This weather was easier to solve. And any question that only was multiplication is a bit easier to solve. But what has been frustrating is that you combine the two together. And suddenly, you get an extremely rich... I mean, we know that there are statements in numbers that are actually as undecidable. There are certain polynomials in some number variables. You know, it's the solution in the natural numbers. And the answer depends on an undecidable statement, like whether the axioms of mathematics are consistent or not. But, yeah, but even the simplest problems that combine something more multiplicative, such as the primes with something additive, such as shifting by two. Separately, we understand both from well, but if you shift the prime by two, can you get up? How often can you get another prime? It's been amazingly hot to relate the two. And we should say that the twin prime conjecture is just that it posits that there are infinitely many pairs of prime numbers that differ by two. Now, the interesting thing is that you have been very successful at pushing forward the field in answering these complicated questions of this variety. Like you mentioned, the green tile theorem, it proves that prime numbers contain arithmetic progressions of any length. Right. Which is mind-blowing that you can prove something like that. Right. Yeah, so what we've realized because of this type of research is that there's different patterns have different levels of indestructibility. So what makes the twin prime common hard is that you take all the primes in the world, you know, three, five, seven, eleven, so forth. There are some twins in there, eleven and thirteen is a twin prime, perfect in prime, so forth. But you could easily, if you wanted to, redact the primes to get rid of, to get rid of these twins. Like the twins, they chop and they infinitely many of them, but that you recently sparse. I mean, initially it's quite a few, but once you got the millions, trillions, they become rare and rare. And you could actually just, you know, if someone was given access to the database of prime, you just edit it out, a few primes here and there. They could make the trim package at your false by just removing like 0.01 percent of the prime, so something just well chosen to do this. And so you could present a censored database of the primes, which passes all of the statistical tests of the primes, you know, that it obeys things like the problem with theorem and other sex of the primes, but doesn't contain any trin primes anymore. And this is a real obstacle to the twin prime conjecture. It means that any proof strategy to actually find trin primes in the actual primes must fail when applied to these slightly edited primes. And so it must use some very subtle delicate feature of the primes that you can't just get from like like I could get statistical analysis. Okay, so that's how yeah. On the other hand, I think progression has turned out to be much more robust. Like you can take the primes and you can eliminate 99% of the primes actually, you know, and you can take any 90% of anyone and it turns out another thing we prove is that you still get as make progressions. Ethnic progressions are much, you know, they're like cockroaches of arbitrary length. Yes. Yes. That's crazy. Yeah. So for people who don't know, arithmetic progressions is a sequence of numbers that differ by some fixed amount. Yeah. But it's again, like it's an infinite monkey type phenomenon. For any fixed length of your set, you don't get arbitrary, that's the progressions. You only get quite short progressions. You're saying twin primes not an infinite monkey of phenomena. I mean, it's a very subtle one. It's still an infinite monkey phenomenon. Right. If the primes were really genuinely random, if the primes were generated by monkeys, then yes, in fact the infinite monkey theorem would all be you're saying that twin prime is it doesn't, you can't use the same tools. Like the, it doesn't appear random almost. Well, we don't know. Yeah. So we believe we believe the primes behave like a random set. And so the reason why we care about the trim and how conjecture is it's a test case for whether we can genuinely completely say we're with 0% chance of error that the prime is behave like a random set. Okay. Random, yeah, random versions of the primes we know contain twins. At least we're 100% probably or probably tending to 100% as you go out for them further. Yeah. So the primes we believe that the random, the reason why primes are indestructible is that regardless of whether you're said it looks random or looks structured like periodic in both cases, and the earth make progressions appear. But for different reasons. And this is basically all the ways in which the thing there are many proofs of these sort of primes progression after the earth's and they're all proven by some sort of dichotomy where your set is either structured or random and in both cases, you can say something and then you put the two together. But in trim primes, if the primes are random, then you're happy you win. If you're primes are structured, they can be struck in a specific way that eliminates the trend, the twins. And we can't rule out that one conspiracy. And yet you're able to make a zanish term progress on the K2 version. Right. So the one thing about conspiracies is that any one conspiracy theory is really how to disprove that you know if you believe the world is one by lizards is a here's evidence that it's not my man is this world that that episode's talking about lizards. Yeah. You may have encountered this kind of phenomenon. Yeah. Like a pure like there's there's almost no way to it. Definitely will not explain the same as true in mathematics that a conspiracy has talked solely devoted to learning trim primes. You know, you have to also infiltrate other areas of mathematics. But like it could be made consistent at least as far as we know. But there's a weird phenomenon that you can make one can do one conspiracy rule out other conspiracies. So you know if the world is one by this is the kind also be one by the ins. Right. So one unreasonable thing is it's hard to dispute but more than one there are there are tools. So yeah. So for example, we know there's infinitely many primes that are no two which are so they've been made pairs of right which differ by at most 246 actually is is the code. So there's a bound. Yes. Right. Like there's trim primes. There's a thing called cousin primes that differ by by four. This is called sexy primes that differ by six. What are sexy primes? Primes that differ by six. Right. The name is much less. It's of course, there's much less exciting than the name suggests. Yeah. So you can make a conspiracy rule out one of these but like once you have like 50 of them it turns out that you can't rule out all of them at once. It just requires too much energy somehow in this conspiracy space. How do you do the bound part? How do you develop a bound for the difference between the primes that okay so there's an infinite number of so it's ultimately based on what's called the pigeon principle. So the pigeon principle is a statement that if you have a number of pigeons and they all have to go into the pigeon holes and you have more pigeons than pigeon holes. Then one of the pigeon holes has to have at least two pigeons. So that has to be two pigeons that are close together. So for instance, if you have a hundred numbers and they all range from one to a thousand. Two of them have to be at most ten apart. Because you can divide up the numbers from one to a hundred into one hundred pigeon holes. Let's say they have 101 numbers. 101 numbers then two of them have to be distance less than ten apart because two of them have to belong to the same pigeon hole. So it's a basic, basic feature of a basic principle in mathematics. So it doesn't quite work with the primes directly because if the primes get sparser and sparser as you go out. There are fewer and fewer numbers of primes. But it turns out that there's a way to assign weights to the numbers. So there are numbers that are kind of almost primes. But they don't have no factors at all other than themselves in one. They have very few factors. And it turns out that we understand almost primes a lot better than primes. And so for example, it was known for a long time that they were trying to almost primes. This has been worked out. So almost primes are something we can't understand. So you can actually restrict the attention to a suitable set of almost primes. And whereas the primes are very spars overall relative to the almost primes actually are much less spars. You can set up a set of almost primes where the primes are density like say 1%. And that gives you a shot at proving by applying some sort of pigeonhole principle that there's pairs of primes that are just nearly 100 and 100 apart. In order to put the Trin-Pile Conjecture, you need to get the density of primes as I think almost as up to a 50%. Once you get up to 50%, you would get Trin-Prives. But unfortunately there are barriers. We know that no matter what kind of goods that are almost primes you pick, the density of primes can never get up off 50%. It's called the parody barrier. And I would love to find, yes, one of my long-term dreams is to finally to boost that barrier. Because it would open up not only to Trin-Pile Conjecture, the go back injection, and many other problems in number theory. I could only block it because our current techniques would require going beyond this theoretical parody barrier. It's like pulling past the speed of light. Yeah, so we should say a 20% conjecture. One of the biggest problems in the history of mathematics, go back in texture also. They feel like extra neighbors. Is there been days when you felt you saw the path? Oh, yeah. Sometimes you try something and it works super well. You again, again, the sense of mathematical smell we talked about earlier. You learn from experience when things are going too well. Because there are certain difficulties that you sort of have to encounter. I think the way of calling my put it is that, you know, if you are on the streets of New York and you put in a blindfold and you put in a car. After some hours, the pipe was off and then you were in Beijing. You know, I mean, that was too easy somehow. There was no ocean being crossed. Even if you don't know exactly what was done, you were suspecting that something wasn't right. But is that still in the back of your head? Do you return to the prime numbers every once in a while to see? Yeah, when I have nothing better to do, which is less than that time. Which is, it is busy with so many things these days. But when I have free time and I am not too frustrated to work on my sort of view or research projects. I also don't want to do my ministry of support. I don't want to do some errands for my family. I can play with these things for fun. And usually you get nowhere. You have to just say, okay, fine. Once again, nothing happened. I will move on. Very occasionally, one of these problems I actually solved. Sometimes as you say, you think you solved it and then you're forward for maybe 15 minutes. And then you think I should check this because this is too easy. Too could be true and usually is. What's your gut say about when these problems would be solved? When prime and go back to prime. I think we will keep getting more partial results. It doesn't need at least one, this parity barrier is the biggest remaining obstacle. There are simpler versions of the conjecture where we are getting really close. So I think we will, in 10 years we will have many more much closer results. We may not have the whole thing. So trend times is somewhere close. Reemond hypothesis, I have no clue. I mean, it has happened by accident. I think so. The remond hypothesis is kind of more general conjecture about the distribution of prime numbers. Right. Yeah, it's it's safe to sort of viewed multiplicatively. For questions only involving multiplication, no addition. The primes really do behave well as randomly as you could hope. So there's a phenomenon in probably called square-over-cancellation that if you want to pull, say, America, upon some issue. And you ask one or two voters and you may have sampled a bad sample. And then you get to have really imprecise measurement of the full average. But if you sample more and more people, the accuracy gets better and better. And it actually improves like the square root of the number of people you sample. So yeah, if you sample 1,000 people, you can get like a two feet percent margin of error. So in the same sense, if you measure the primes in a certain multiplicative sense, there's a certain type of statistic you can measure. It's called the remunzator function. And it fluctuates up and down. But in some sense, as you keep averaging more and more, if you sample more and more, the fluctuation should go down as if they were random. And there's a very precise way to quantify that. And the remunapalysis is a very elegant way that captures this. But as with many other ways in mathematics, we have very few tools to show that something really genuine behaves like Bidi-Vandam. And this is not just a little bit random, but it's asking that behaves as random as a dukely random set, this square-over-cancellation. And we know here because of things related to the parity property, most of us, usual techniques cannot hope to settle this question. The proof has to come out of left field. Yeah, but what that is, no one has any serious proposal. And there's various ways of, as I said, you can modify the primes a little bit and you can just avoid the remunapalysis. So it has to be very delicate. You kind of apply something that has huge margins of error. It has to be just barely work. And there's like all these pitfalls that you have to dodge very adeptly. The prime numbers are just fascinating. What do you most mysterious about the prime numbers? That's a good question. So like, conjectually, we have a good model of them. As I said, they have certain patterns, like the primes are usually odd, for instance. But apart from these obvious patterns, they behave very randomly. And just assuming that they behave... So there's something called the creamer random model for the primes. But after a certain point, primes just behave like a random set. And there's various flight modifications as a model. But this has been a very good model. It matches the numerics. It tells us what to predict. Like, I can tell you if complete certainty the trim back object is true. The random model gives overwhelming odds to this truth. Most of our mathematics is optimized for solving things with patterns in them. And the primes have this anti-pattern as doom, almost everything, really. But we can't prove that. I guess it's not mysterious at the price of a random. Because there's no reason for them to have any kind of secret pattern. But what is mysterious is what is the mechanism that really forces the randomness to happen? This is absent. Another incredibly surprisingly difficult problem is the collots conjecture. Oh, yes. Simple to state. Beautiful to visualize. Yes. In simplicity. And yet extremely difficult to solve. And yet you have been able to make progress. Paul Radar said about the collots conjecture that mathematics may not be ready for such problems. Others have stated that it is an extraordinarily difficult problem completely out of reach. This is in 2010. Out of reach of present day mathematics and yet, you have made some progress. Why is it so difficult to make? Can you actually even explain what it is? Oh, yeah. So it's a problem that you can explain. It helps with some visual aids. But yeah, so you take any natural number like the 13. And you apply the following procedure to it. So if it's even you divide it by two. And if it's odd, you multiply it by three and add one. So even numbers get smaller, odd numbers get bigger. So 13 would become 40. Because 13 times 3 is 39, add one to your 40. So it's a simple process for odd numbers and even numbers. They're both very easy operations. And then you put together that's still reasonably simple. But then you ask what happens when you iterate it. You take the output that you just got and feed it back in. So 13 becomes 40. 40 is now even. If I buy two is 20, 20 is still even divided to 10, 5, and then 5 times C plus 16, and then 8, 4, 2, 1. So and then for one equals one 4, 2, 1, 4, 2, 1, is cycles forever. So this sequence I just described, 13, 40, 20, 10s above all of these are also called hailstorm sequences. Because there's an over simplified model of hailstorm formation, which is not actually quite correct, but it's so some I've thought to high school students as a first box of the hailstorm formation is that a little nugget of ice gets a nice crystal forms in cloud. And it goes up and down because of the wind. And sometimes it's cold, it gets a bit more mass and maybe it melts a little bit. And this process is going up and down, creates this of partially melted ice, which I mentioned because it's health stone, and eventually it falls down to the earth. So the conjecture is that no matter how high you start up, like you take a number which is in the millions of billions, this process that goes up if you're hard and down, if you're even eventually closed up to earth all the time. No matter where you start, it was very simple algorithmally you end up at one. And you might climb for a while. Right. So it's now, if you plot it, these sequences, they look like Brownian motion. They look like the stock market. They just go up and down in a seemingly random pattern. And in fact, usually that's what happens. If you plug in a random number, you can actually prove that at least initially that it would look like random walk. And that's actually a random walk with a downward drift. It's like if you're always gambling on a net at the casino, with odds slightly weighted against you. So sometimes you win, sometimes you lose, but over in the long run, you lose a bit more than you win. And so normally your wallet will go to zero if you just keep playing over and over again. So statistically it makes sense. Yes. So the result that I proved roughly speaking asserts that statistically, like 9, 10% of all inputs would drift down to maybe not all the way to one, but to be much, much smaller than what you started. So it's like if I told you that if you go to a casino, most of the time you end up, if you keep playing up long enough, you end up with a smaller amount of any wallet when you start. That's kind of like the result that I proved. So why is that result like can you continue down that thread to prove the full conjecture? Well, the problem is that I used arguments from probability theory. And there's always this exceptional event. So in probability we have this low large numbers, which tells you things like if you play a casino with a game at a casino with a losing expectation, over time you are guaranteed almost surely with probability as close to 100% as you would. You're guaranteed to lose money. But there's always this exceptional outlier. Like it is mathematically possible that even in the game is also not in your favour, you could just keep winning slightly more than you lose. Very much like how in Navier Stokes, there could be, you know, most of the time your waves can disperse, there could be just one outlier choice of initial conditions that would lead you to blow up. And there could be one outlier choice of special number that you stick in. That shoes of infinity were all other numbers crushed earth, crushed one. In fact, there's some mathematicians who have, Alex Contorovich, who proposed that actually these collapse iterations are like these similar automata. Actually, if you look at what happened in binary, they do, if you look a little bit like these game of life type patency. And in analogy to how the game of life can create these massive self-replicating objects and so forth, possibly you could create some sort of heavier than air flying machine, a number which is actually encoding this machine, which is just, whose job it is to encode is to create a version of a sub which is larger. heavier than air machine encoded in a number that flies forever. So Conway, in fact worked on this problem as well. Conway, so similar, in fact, that was more on insturations for the Navier Stokes project. Conway studied generalizations of the collapse problem. Instead of, more complicated branching goals, but instead of having two cases, maybe you have 17 cases and then you go up and down. And he showed that once your iteration gets complicated enough, you can actually encode two ring machines and you can actually make these problems undecidable and do things like this. In fact, he met a programming language for these kind of fractional linear transformations. He could have fact-tracked as a play on a four-track. And he showed that you could program, it was two incomplete. You could make a program that if your number you inserted in was encoded as a prime, it would sink to zero. It would go down otherwise it would go up and things like that. So the general cluster problems is really as complicated as all the mathematics. Some of the mystery of the cellular terminal that we talked about having a mathematical framework to say anything about cellular terminal, maybe the same kind of framework is required. Yeah, yeah, clocks and gesture. Yeah, if you want to do it not statistically, but you really want 100% of all inputs to 4 to earth. Yeah, so what might be feasible is, yeah, assisting 99%, you know, going to go to one. But like everything, you know, that books hard. What would you say is out of these within reach, famous problems is the hardest problem we have today? Is there any more hypothesis? We want to, it's up there. Pico's MP is a good one because that's a matter of problem. Like if you solve that in the positive sense that you can find a Pico's MP algorithm, then potentially this solves a lot of other problems as well. And we should mention some of the conjectures we've been talking about, you know, a lot of stuff is built on top of them now. There's ripple effects. Pico's MP has more ripple effects than basically any other. Right. If the readman hypothesis is disproven, that would be a big mental shock to the number of theorists. But it would have follow on effects for cryptography. Because a lot of cryptography uses number theory, uses number 30 constructions of woven privacy and so forth. And it relies very much on the intuition that number of theorists have built over many, many years of what operations of woven privacy behave randomly and what ones don't. And in particular, encryption methods are designed to turn text with information on it into text, which is indistinguishable. From random noise. So, um, and hence, we believe to be almost impossible to crack, at least mathematically. But if something has caught our beliefs, our three-man hypothesis is wrong, it means that there are actual patterns of the primes that we're not aware of. And if there's one, there's probably going more. And suddenly a lot of our crypto systems are in doubt. Yeah. But then how do you then say stuff about the primes? Yeah. Like you're going towards the co-exca-conjecture again. Because if you do you want it to be random, right? Yes. You want it to be random. So more broadly, I'm just looking for more tools, more ways to show that things are right now. How do you prove it conspiracy doesn't happen? Right. Is there any chance to you that P equals NP? Is there some, can you imagine a possibly universe? It is possible. I mean, there's various scenarios. I mean, there's one way it is technically possible, but in fact, it's never actually implementable. The evidence is sort of slightly pushing in favor of no, that we probably P is not equal to NP. I mean, it seems like it's one of those cases similar to a room in hypothesis. I think the evidence is leaning pretty heavily on the no. It's certainly more on the no than on the yes. The funny thing about P equals NP is that we have also a lot more obstructions than we do for almost any other problem. So while there's evidence, we also have a lot of results rolling out many, many types of approaches to the problem. This is the one thing that the computer science is actually very good at. It's actually saying that certain approaches cannot work, no go-theorabes. It could be understandable. We don't, yeah, we don't know. There's a funny story I read that when you won the field's medal, somebody from the internet wrote you. And asked, you know, what are you going to do now that you won this prestigious award? And then you just quickly, very humbly said that, you know, this shiny medal is not going to solve any of the problems I'll currently working on. I'm just going to keep working on them. It's just, first of all, it's funny to me that you would answer an email in that context. And second of all, it just shows your humility. But anyway, maybe you could speak to the field's medal, but it's another way for me to ask a... about Gregorio Proman, what do you think about him famously declining the field's medal and the millennial prize, which came with a $1 million of prize money? He stated that I'm not interested in money or fame. The prize is completely irrelevant for me if the proof is correct, then no other recognition is needed. Yeah. Well, he's somewhat of an outlier, even among mathematicians who tend to have somewhat idealistic views. I've never met him. I think I'd be interested in him one day, but I'd never have the chance. I know people who met him. He's always had strong views about certain things. I mean, it's not like he was completely isolated from the math community. I mean, he would give talks and papers and so forth. But somewhere he just decided not to engage with the rest of the community. He was dissolution of something. I don't know. And he decided to piece out and collect mushrooms in St. Petersburg or something. That's fine. You can do that. I mean, that's another flip side. I mean, we are not a lot of problems that we solve. Some of them do have practical application. That's great. But if you stop thinking about a problem, he hasn't published since in this field, but that's fine. There's many many other people who have done this as well. I guess one thing I didn't realize initially with the field's medal is that it sort of makes you part of the establishment. Most mathematicians, there's just career mathematicians. You just focus on publishing your next paper, maybe getting one, promoted one rank, and starting a few projects, maybe having some students or something. But then suddenly people want your opinion on things. And you have to think a little bit about things that you might just so foolishly say because you know no one's going to listen to you. It's more important now. Is it constraining to you? Are you able to still have fun and be a rebel? Try crazy stuff and play with the idea. I have a lot less free time than I had previously. Mostly by choice. Obviously I have the option to sort of decline. So I declare a lot of things. I could decline even more. Or I could acquire a repetition of things so unreliable that you would always be asking anymore. I love the different algorithms here. This is great. It's always an option. But there are things that are like, I mean, I don't spend as much time as I do as a postdoc. Just working in the one-pop on the time or falling around. I still do that a little bit. But as you're advancing your career, some of the more soft skills. So math somehow front nodes all the technical skills to the early stages of a career. So as a postdoc, it's a publisher-apparish. You incentivize to basically focus on proving very technical terms. So prove yourself as well as prove the theorems. But then as you get more senior, you have to start mentoring and giving interviews. And trying to shape direction of the field both research wise. Sometimes you have to present with administrative things. It's kind of the right social contract because you need to work in the trenches to see what can help mathematicians. The other side of the establishment sort of the really positive thing is that you get to be a light that's an inspiration to a lot of young mathematicians or young people that are just interested in mathematics. It's like, yeah. It's just how the human mind works. This is where I would probably say that I like the fields metal that it does inspire a lot of young people somehow. I don't know. This is just how human brains work. Yeah. At the same time, I also want to give sort of respect to somebody like Gregorio Proman who is critical of awards in his mind. Those are his principles and any human that's able for their principles to like do the thing that most humans would not be able to do. It's beautiful to see. Some recognition is necessary and important. But yeah, it's also important to not let these things take over your life. And like only be concerned about getting the next big award or whatever. I mean, yeah, yeah. Yeah. So again, you see these people try to only solve like a really big math problems and not work on on things that are less sexy, but, but actually, it's still interesting and instructive. As you say, like the way the human mind works, it's, we understand things better when they're attached to humans. And also, if they're attached to a small number of humans, I'm like, so the way our humans mind is, is why we can comprehend the relationship between the 10 or 20 people. But once you get beyond that, like a hundred people, like this, there's a limit. I figured there's a name for it. And which it just becomes the other. And so we have to simplify the poem. You know, 9.9% of humanity becomes the other. And of these models are incorrect in this course of problems. But so, yeah, so to humanize a subject, you know, if you identify a small number of people, I say, you know, these are representative people of the subject. You know, I say role models, for example. That has some role. But it can also be, yeah, too much of it can be harmful because it's, I'll be the first to say that my own career track for this not that of a typical mathematician. I, the very accelerated education, I skipped a lot of classes. I think I was very fortunate mentoring opportunities. And I think I was at the right place at the right time. Because someone doesn't have my trajectory. It doesn't mean that they can't be good mathematicians. They're the mathematicians in a very different style. And we need people with different style. And, you know, even if, and sometimes too much focus is given on the, on the person who does the last step to complete. A project in mathematics or elsewhere that's really taken, you know, centuries or decades with lots and lots of building a lot of previous work. But that's a story that's difficult to tell if you're not an expert. Because it's easy to just say one person did this one thing. You know, it makes for much simpler history. I think on the whole it is a hugely positive thing to talk about Steve Jobs as a representative of Apple. When I personally know, and of course, everybody knows the incredible design, the incredible engineering teams. It's just the individual humans on those teams. They're not a team. They're individual humans on a team. And there's a lot of brilliance there. But it's just a nice shorthand like a very like pie. Yeah. Steve Jobs. Yeah. Yeah. As a starting point, you see. Yeah. As a first approximation. That's how you can read some biographies and then look into much deeper first approximation. Yeah. That's right. So you were a person to Andrew Wiles at that time. I mean, we never really met somebody who was on the same ventilator, just like me. But that's how I was there. It's a funny moment how history is just all interconnected. And at that time he and I, obviously he proved the formats last year. What did you think? Maybe looking back now with more context about that moment. And math history. Yeah. So I was a graduate student at the time. I mean, I deeply remember, you know, there was press attention. And we all had the same. We heard Pichin Holtz in the same mail room. And like suddenly Andrew Walser's mailbox exploded to be overflowing. That's a good metric. Yeah. You know, so we all talked about it at T and so forth. I mean, we didn't understand most of us, we understand the proof. We understand sort of high-level details. Like is it ongoing project to formalize it in lean? Kevin Ponsett is actually. Yeah, can we take that small tangent? Is it how difficult does that? Because as I understand it from us, the proof for us last-term has like super complicated objects. Yeah, yeah, really difficult to formalize now. Yeah, I guess you're right. The objects that they use, you can define them. So they've been defined in lean. So just defining what they are can be done. That's really not true of your purpose. But there's a lot of really basic facts about these objects that have taken decades to prove in all these different math papers. And so lots of these have reformed. And so lots of these have reformed as well. Kevin's, Kevin Buzzard's goal, actually, he has a five-year grant to formalize philosophy. And he doesn't think he could be able to get all the way down to the basic axioms. But you want to formalize it to the point where the only things that he needs to rely on is black boxes are things that were known by 1980 to number theose at the time. And then some other person or some other work will have to be done to get from there. So it's a different area of mathematics than the type of mathematics I'm used to. In analysis, which is kind of my area, the objects we study are kind of much closer to the ground. We study things like prime numbers and functions and things that are within scope of a high school math education to at least define. Yeah, but then this is very advanced algebraic side of number three. If you have been building structures of one structure for quite a while. And it's a very sturdy structure. It's been very, at the base, it releases extremely hard development, the text books and so forth. But it does get to the point where if you haven't taken these years of study and you want to ask about what is going on at level six of this tower. You have to spend quite a bit of time before they can even get to the point where you can see where you recognize. What inspires you about his journey that we similar as we talked about seven years, most working in secret? Yeah, it kind of fits with the sort of the romantic image that people have of mathematicians to be extent to think of them at all as these kind of eccentric visits or something. So that sort of accentuated that perspective. I mean, it is a great achievement. His style of solving problems is so different from my own. But which is great. I mean, we need people like that. He's bigger like what in terms of like you like the collaborative. I like moving on from a problem if it's giving too much difficulty. But you need the people who have the tenacity and the fearlessness. I've collaborated with people like that where I want to give up because for the first approach that we tried to work in the second one didn't approach. They convinced and they have the third fourth and the fifth of what works. And I have to eat my words. Okay, I didn't think this was going to work, but yes, you were right all along. And we should say for people don't know, not only are you known for the brilliance of your work, but the incredible productivity, just the number of papers, which are all very high quality. So there's something to be said about being able to jump from topic to topic. Yeah, it works for me. Yeah, I mean, also people who have very productive and they focus very deeply on. I think everyone has to find their own workflow. One thing which is a shame in mathematics is that we have mathematics. There's sort of a one size, but it's all approach to teaching mathematics. And so we have a certain curriculum and so forth. I mean, maybe like if you do math competitions or something, you get a slightly different experience. But I think many people, they don't find their native math language until very late, or usually too late. So they stop doing mathematics and they have a bad experience with a teacher who's trying to teach them one way to do mathematics that they don't like it. My theory is that humans don't come, evolution has not given us a math center or brain directly. We have a vision center and a language center and some other centers which have evolution as home. But it doesn't, we don't have innate sense of mathematics. So our other centers are sophisticated enough that different people, we can repurpose other areas of our brain to do mathematics. So some people have figured out how to use the visual center to do mathematics. And so they think very visually when they do mathematics, some people have repurposed their language center and they think very symbolically. Some people, if they are very competitive and they like gaming, there's a part of your brain that's very good at solving puzzles and games and that can be repurposed. But like when I talk to my mathematicians, they don't quite think that I can tell that they're using some of different styles of thinking. I mean, not, not destroyed, but they may prefer visual. I don't like you prefer visual so much, I need also visual aids myself. You know, my thanks for the common language. We can still talk to each other even if we are thinking in different ways. But you can tell there's a different set of subsystems being used in the thinking process. Yeah, they take it from past, they're very quick at things that I struggle with in vice versa. And yet they still get to the same goal. But the way we educate, unless you have a personalized tutor or something, education, just financial skill has to be mass-produced. You have to teach the 30 kids. They have 30 different styles, you can't teach 30 different ways. On that topic, what advice would you give to students, young students who are struggling with math, but are interested in it and would like to get better? Is there something in this complicated educational context? Yeah, it's a tricky problem. One nice thing is that there are now lots of sources for my faculty in Richmond outside the classroom. So in my day, there are already math competitions. And they're also like popular math books in the library. But now you have YouTube, there are forums devoted to solving math puzzles. And math shows up in other places. For example, there are hobbyists who play poker for fun. And they are for very specific reasons, interested in very specific probability questions. And they actually, there's a community of amateur pro-wrestling in poker. In chess and baseball. I mean, there's this, there's a lot of local place. I'm hoping actually with these new sort of tools for lean and so forth. We can incorporate the broader public into math research projects. This is almost, it doesn't happen at all currently. So in the sciences, there's some scope for citizen science. Astronomers, they're amateurs who would discover comments. And there's biologists, they're people who could identify butterflies and so forth. And in math, there are smaller amount of activities where amateur mathematicians can discover new primes. But previously, because we have to verify every single contribution, like most mathematical research projects, it would not help to have input from the general public. In fact, it would just be, be time consuming because just error checking and everything. But one thing about these formalization projects is that they are bringing together more, bringing in more people. So I'm sure there are high school students who have already contributed to some of these formalizing projects who contributed to math, will have, and I'm sure there are high school students who have already contributed to some of these formalizing projects that you don't need to be a PhD holder to just work on one topic thing. There's something about the formalization here that also, as a very first step, opens it up to the programming community too. Yes, the people who are already comfortable with the program. It seems like programming is somehow maybe just the feeling, but it feels more accessible to folks than math. The scene is this like extreme, especially in mathematics, scene is this extremely difficult to enter area and programming is not, so that could be just an entry point. You can actually record and it can get results. You can pin out the world pretty quickly. If programming was taught as an almost entirely theoretical subject, where you just talk with the computer science, the theory of functions and routines and so forth, and outside of some very specialized homework assignments, you would like to program on the weekend for fun. Or there would be as consider as hard as math. So there are communities of non-matheticians where they're deploying math for some very specific purpose, like optimizing the poker game. And for them, the math thing comes fun for them. What advice would you give in general to young people, how to pick a career, how to find themselves? That's a tough, tough question. There's a lot of certainty now in the world. There was this period after the war where, at least in the West, if you came from a good demographic, there was a very stable path to it, good creative, good ecology, you get an education, you pick one profession and you stick to it. It's becoming much more think of the past. So I think you just have to be adaptable and flexible. I think people will have to get skills that are transferable. Like learning one specific program in language or one specific subject mathematics or something, that is not a super transferable skill, but knowing how to reason with abstract concepts or how to problem solve and things go wrong and so on. These are things which I think we will still need. Even as our tools get better and you know, you would be working with AI and so forth. But actually you're an interesting case study. I mean, you're like one of the great living mathematicians. Right? And then you had a way of doing things and then all of a sudden you start learning. I mean, first of all, you kept learning new fields, but you've learned lean. That's not, that's a non-trivial thing to learn. Like that's a, yeah, that's a, for a lot of people, that's extremely uncomfortable leap to take. Yeah, a lot of mathematicians. First of all, I've always been interested in new ways to do mathematics. I feel like a lot of the ways we do things right now are inefficient. Many of my colleagues, you spend a lot of time doing very routine computations or doing things that other mathematicians would instantly know how to do and we don't know how to do. And why can't we search and get a quick response and so on. So that's why I've always been interested in exploring new workflows. About four or five years ago, I was on a committee where we had to ask for ideas for interesting workshops to run at a math institute. And at the time Peter Schorzer had just formalized one of his new theorems and there's some other developments in computer assisted proof that look quite interesting. And I said, oh, we should, we should, we should want to workshop on this. This is a pretty good idea. And then I was a bit too enthusiastic about this idea. So I got violent, violent told to actually write it. So I did with a bunch of other people, colonization, Jordan Allenberg and, and a bunch of other people. And it was, it wasn't a nice success. We brought together a bunch of mathematicians and computer scientists and other people and we got up to speed and state we are. And it was really interesting developments that most mathematicians didn't know what was going on. That lots of nice proofs of concept, you know, it's just so hints of what was going to happen. It was just before chat GBT, but there was even then there was one talk about language models and the potential, and carefully of those in the future. So that got me excited about the subject. So I started giving talks about this is some of which more of us just are looking at. Now that I've run this conference and then chat GBT came out and suddenly air was everywhere. And so I got interviewed a lot about this topic. And in particular, the interaction between AI and former professors and I said, yeah, they should be combined. This is, this is, this is this is perfect synergy to happen here. And at some point I realized that I have to actually do not just talk to talk but walk the walk. You know, like, you know, I don't work in machine learning. I don't work in pro-formization. And there's a limit to how much I can just rely on authority and saying, you know, I'm a wander mathematician, just trust me, you know, when I say that this is going to change my fight, because I'm not doing it any, when I don't do any of it myself. So I thought that I had to actually justify it. A lot of what I get into actually, I don't quite see an advice as how much time I'm going to spend on it. And it's only after I'm sort of waist deep in a project that I realized, but that point I'm committed. Well, that's deeply admirable that you're willing to go into the fray. Be in some small way beginner, right? Or have some of the sort of challenges that a beginner would, right? And new concepts, new ways of thinking, also, you know, sucking at a thing that others, I think in that talk, you know, you could be a field of matter-winning mathematician and undergrad knows something better. Yeah. I think mathematics inherently, I mean, mathematics is so huge these days that nobody knows all of modern mathematics. And inevitably we make mistakes. And, you know, you can't cover up your mistakes with just sort of provider or it. I mean, because people will ask for your proofs and if you don't have the proofs, you know what the proofs. I don't love math. So it does keep us honest. I mean, you can still, it's not a perfect panacea, but I think we do have more of a culture of admitting error than because we're forced to all the time. Big ridiculous question. I'm sorry for it once again. Who is the greatest mathematician of all time? Maybe one who's no longer with us. Who are the candidates? The Oiler, Gau's, Newton, Ramonnogen, Hilbert. So first of all, I said, I said, I said, much before, like there's some time dependence. But on the day. Yeah, like if you if you if you park cumulatively over time, for example, you could like like sort of like this is one of the good tenders. And then maybe some unnamed anonymous, rather just before that, you know, whoever came up with the concept of numbers, you know, do mathematicians today still feel the impact of Hilbert just oh yeah, directly of everything that's happened in the 20th century. Yeah, Hilbert spaces. So we have lots of things that are named after him of course. Just the arrangement of mathematics and just the introduction of certain concepts. I mean, 23 problems have been extremely influential. There's some strange power to the declaring which problems. Yeah, hard to solve the statement of the open problems. Yeah, I mean, this is bystander effect everywhere. Like if no one says you should do X, I'm just sort of mills around waiting for somebody else to do something. And like nothing gets done. So and like it's the one thing that actually you have to teach undergraduates in mathematics is that you always try something. So you see a lot of paralysis in an undergraduate trying a math problem. If they recognize that there's a certain technique that can be applied, they will try it. But they're a problem for which they see none of their standard techniques obviously applies. And the common reaction is then just paralysis. I don't know what to do. I think there's a quote from the Simpson. So I've tried nothing and I'm all that ideas. So, you know, like the next step then is to try anything like no matter how stupid. And in fact, I'm almost the stupid of the better. Which, you know, I think it was almost guaranteed to fail. But the way it fails is going to be instructive. Like it fails because you do not at all taking to account this hypothesis. Oh, this hypothesis must be useful. That's a clue. I think he also suggested somewhere this fascinating approach which really stuck with me as they're using it and it really works. I think you said it's called structured procrastination. No, yes. It's when you really don't want to do a thing. The imagine a thing you don't want to do more. Yes. That's worse than that. And then in that way you procrastinate by not doing the thing that's worse. Yeah. Yeah. It's a nice hack. It actually works. Yeah. Yeah. I mean, with anything like, you know, I mean, like you, um, psychology is really important. Like you, you, you, you, you talk to athletes like marathon runners is so important. Yeah. And they talk about what's the most important thing is that they're training measurement or the diet and so on. So, so much of it is psychology. You know, just tricking yourself to, to think that the form is feasible. So you motivate to do it. Is there something our human mind will never be able to comprehend? Well, I sort of, I guess the method is not mean, you know, it's a bit of a reduction. It's between a lot. There must be some, it's between large number that you got. I understand. I was the first thing I came to mind. So that, but even broadly, is there, are we, is there something about our mind that's we're going to be limited, even with the help of mathematics? Well, okay. I mean, it's like, how much augmentation are you willing to like, like, for example, if I didn't even have pen and paper. Um, like if I had no technology whatsoever, okay. So I'm not allowed blackboard pen and paper. You're already much more limited than you would be incredibly limited. Even language, the English language is a technology. It's a, it's one that's been very internalized. So you're right. They're really, the, the formulation of the problems in correct because there really is no longer a just a solo human. We're already augmented in extremely complicated, intricate ways, right? Yeah. We're already like a collective intelligence. Yes. Yeah. I guess. So humanity plural has much more intelligence in principle on his good days. Then, then the individual humans put together. It can all have less. Okay. But, um, yeah. So, yeah, math, math, math, math, mathematical community plural is, is incredibly super intelligent, uh, entity. Um, that, uh, no single human mathematician can, can come close to, to replicate it. You see it a little bit on these questions analysis sites. So this method flow, which is the method version of stackable flow. And like, sometimes you get like this very quick responses to very difficult questions from the community. And it is, it's a pleasure to watch actually. Well, as an expert. I'm a fan spectator of that, of that site, just seeing the brilliance of the different people there. The depth analysis that people have. And the willingness to engage in the, in the rigor and the nuance of the particular questions, pretty cool to watch. It's fun. It's honestly just fun to watch. What gives you hope about this whole thing we have going on human civilization? I think, yeah. The younger generation is always like really creative and enthusiastic and, and inventive. I, I, I, it's a pleasure working with, with, with, with, with, with young students. Um, you know, the, uh, the progress of science tells us that the problems that used to be really difficult can become extremely, you know, can become like trivial to solve. I mean, I, it was like navigation, you know, just knowing where you work on the planet. Was this horrendous problem? People would die. You know, I lost fortunes because so they couldn't navigate. And we have devices in our pockets that do this automatically for us. Like is a completely solved problem. You know, so things that I've seen unfeedable for us now could be maybe just homely exercises for. Yeah, one of the things I find really sad about the finiteness of life is that I won't get to see all the cool things we create as a civilization, you know, that, because it is an ex-100 years, 200 years just imagine showing, showing up in 200 years. Yeah, well, I really, plenty of this happened. You know, like if you could go back in time and talk to you, if you're teenage self or something, you know, I mean, yeah, yeah, just the internet and, and, and our AI, I mean, like, I get it, they've been, they've been, they've been, they've been internalized. And so, yeah, of course, uh, and I can understand our voice and, and give reason why, you know, slightly incoctiles us to any question, but yeah, this was mind blowing even two years ago. And in the moment, it's hilarious to watch on the internet and so on, the, the drama, people take everything for granted very quickly, and then they, we humans seem to entertain ourselves with drama. Well, out of anything that's created, somebody needs to take one opinion, another person needs to take an opposite opinion, argue with each other about it. But when you look at the arc of things, I mean, just even in progress of robotics, just to take a step back and be like, wow, this is beautiful that we humans are able to create this. Yeah, when they infrastructure and the culture is, is healthy, uh, the community of humans can be so much more intelligent and mature and, and rational than individuals within it. Well, one place I can always count on rationality is the comment section of your blog, which I'm a fan of. There's a lot of really smart people there. And thank you, of course, for, uh, for putting those ideas out on the blog. And it's, I can't tell you how, uh, on or I am, that you would spend your time with me today. I was looking forward to this for a long time. Terram, a huge fan. You inspire me, you inspire millions of people. Thank you so much for talking. Thank you. It was a pleasure. Thanks for listening to this conversation with Terrence Tao. To support this podcast, please check out our sponsors in the description or at lexfreedman.com.sasponsors. And now, let me leave you some words from Galileo Galilei. Mathematics is a language with which God has written the universe. Thank you for listening and hope to see you next time.